Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    startup_py32f072xx.o(RESET) refers to startup_py32f072xx.o(STACK) for __initial_sp
    startup_py32f072xx.o(RESET) refers to startup_py32f072xx.o(.text) for Reset_Handler
    startup_py32f072xx.o(RESET) refers to py32f072_it.o(.text.NMI_Handler) for NMI_Handler
    startup_py32f072xx.o(RESET) refers to py32f072_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_py32f072xx.o(RESET) refers to py32f072_it.o(.text.SVC_Handler) for SVC_Handler
    startup_py32f072xx.o(RESET) refers to py32f072_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_py32f072xx.o(RESET) refers to py32f072_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_py32f072xx.o(RESET) refers to py32f072_it.o(.text.USB_IRQHandler) for USB_IRQHandler
    startup_py32f072xx.o(.text) refers to system_py32f072.o(.text.SystemInit) for SystemInit
    startup_py32f072xx.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_py32f072.o(.text.SystemCoreClockUpdate) refers to system_py32f072.o(.rodata.HSIFreqTable) for HSIFreqTable
    system_py32f072.o(.text.SystemCoreClockUpdate) refers to system_py32f072.o(.data.SystemCoreClock) for SystemCoreClock
    system_py32f072.o(.text.SystemCoreClockUpdate) refers to system_py32f072.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_py32f072.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_py32f072.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_py32f072.o(.ARM.exidx.text.SystemInit) refers to system_py32f072.o(.text.SystemInit) for [Anonymous Symbol]
    main.o(.text.main) refers to py32f072_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(.text.main) refers to py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.main) refers to py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.text.main) refers to usbd_cdc_if.o(.text.cdc_acm_init) for cdc_acm_init
    main.o(.text.main) refers to py32f072_hal.o(.text.HAL_Delay) for HAL_Delay
    main.o(.text.main) refers to usbd_cdc_if.o(.text.cdc_acm_data_send_with_dtr_test) for cdc_acm_data_send_with_dtr_test
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.APP_ErrorHandler) refers to main.o(.text.APP_ErrorHandler) for [Anonymous Symbol]
    py32f072_hal_msp.o(.ARM.exidx.text.HAL_MspInit) refers to py32f072_hal_msp.o(.text.HAL_MspInit) for [Anonymous Symbol]
    py32f072_it.o(.ARM.exidx.text.NMI_Handler) refers to py32f072_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    py32f072_it.o(.ARM.exidx.text.HardFault_Handler) refers to py32f072_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    py32f072_it.o(.ARM.exidx.text.SVC_Handler) refers to py32f072_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    py32f072_it.o(.ARM.exidx.text.PendSV_Handler) refers to py32f072_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    py32f072_it.o(.text.SysTick_Handler) refers to py32f072_hal.o(.text.HAL_IncTick) for HAL_IncTick
    py32f072_it.o(.ARM.exidx.text.SysTick_Handler) refers to py32f072_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    py32f072_it.o(.text.USB_IRQHandler) refers to usb_dc_py32.o(.text.USBD_IRQHandler) for USBD_IRQHandler
    py32f072_it.o(.ARM.exidx.text.USB_IRQHandler) refers to py32f072_it.o(.text.USB_IRQHandler) for [Anonymous Symbol]
    usbd_cdc_if.o(.text.usbd_configure_done_callback) refers to usb_dc_py32.o(.text.usbd_ep_start_read) for usbd_ep_start_read
    usbd_cdc_if.o(.text.usbd_configure_done_callback) refers to usbd_cdc_if.o(.bss.read_buffer) for read_buffer
    usbd_cdc_if.o(.ARM.exidx.text.usbd_configure_done_callback) refers to usbd_cdc_if.o(.text.usbd_configure_done_callback) for [Anonymous Symbol]
    usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_out) refers to usb_dc_py32.o(.text.usbd_ep_start_read) for usbd_ep_start_read
    usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_out) refers to usbd_cdc_if.o(.bss.read_buffer) for read_buffer
    usbd_cdc_if.o(.ARM.exidx.text.usbd_cdc_acm_bulk_out) refers to usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_out) for [Anonymous Symbol]
    usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_in) refers to usb_dc_py32.o(.text.usbd_ep_start_write) for usbd_ep_start_write
    usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_in) refers to usbd_cdc_if.o(.bss.ep_tx_busy_flag) for ep_tx_busy_flag
    usbd_cdc_if.o(.ARM.exidx.text.usbd_cdc_acm_bulk_in) refers to usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_in) for [Anonymous Symbol]
    usbd_cdc_if.o(.text.cdc_acm_init) refers to usbd_core.o(.text.usbd_desc_register) for usbd_desc_register
    usbd_cdc_if.o(.text.cdc_acm_init) refers to usbd_cdc.o(.text.usbd_cdc_acm_init_intf) for usbd_cdc_acm_init_intf
    usbd_cdc_if.o(.text.cdc_acm_init) refers to usbd_core.o(.text.usbd_add_interface) for usbd_add_interface
    usbd_cdc_if.o(.text.cdc_acm_init) refers to usbd_core.o(.text.usbd_add_endpoint) for usbd_add_endpoint
    usbd_cdc_if.o(.text.cdc_acm_init) refers to usbd_core.o(.text.usbd_initialize) for usbd_initialize
    usbd_cdc_if.o(.text.cdc_acm_init) refers to usbd_cdc_if.o(.rodata.cdc_descriptor) for [Anonymous Symbol]
    usbd_cdc_if.o(.text.cdc_acm_init) refers to usbd_cdc_if.o(.bss.intf0) for intf0
    usbd_cdc_if.o(.text.cdc_acm_init) refers to usbd_cdc_if.o(.bss.intf1) for intf1
    usbd_cdc_if.o(.text.cdc_acm_init) refers to usbd_cdc_if.o(.data.cdc_out_ep) for cdc_out_ep
    usbd_cdc_if.o(.text.cdc_acm_init) refers to usbd_cdc_if.o(.data.cdc_in_ep) for cdc_in_ep
    usbd_cdc_if.o(.ARM.exidx.text.cdc_acm_init) refers to usbd_cdc_if.o(.text.cdc_acm_init) for [Anonymous Symbol]
    usbd_cdc_if.o(.text.usbd_cdc_acm_set_dtr) refers to usbd_cdc_if.o(.bss.dtr_enable) for dtr_enable
    usbd_cdc_if.o(.ARM.exidx.text.usbd_cdc_acm_set_dtr) refers to usbd_cdc_if.o(.text.usbd_cdc_acm_set_dtr) for [Anonymous Symbol]
    usbd_cdc_if.o(.text.cdc_acm_data_send_with_dtr_test) refers to memseta.o(.text) for __aeabi_memset
    usbd_cdc_if.o(.text.cdc_acm_data_send_with_dtr_test) refers to usb_dc_py32.o(.text.usbd_ep_start_write) for usbd_ep_start_write
    usbd_cdc_if.o(.text.cdc_acm_data_send_with_dtr_test) refers to usbd_cdc_if.o(.bss.dtr_enable) for dtr_enable
    usbd_cdc_if.o(.text.cdc_acm_data_send_with_dtr_test) refers to usbd_cdc_if.o(.data.write_buffer) for write_buffer
    usbd_cdc_if.o(.text.cdc_acm_data_send_with_dtr_test) refers to usbd_cdc_if.o(.bss.ep_tx_busy_flag) for ep_tx_busy_flag
    usbd_cdc_if.o(.ARM.exidx.text.cdc_acm_data_send_with_dtr_test) refers to usbd_cdc_if.o(.text.cdc_acm_data_send_with_dtr_test) for [Anonymous Symbol]
    usbd_cdc_if.o(.data.cdc_out_ep) refers to usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_out) for usbd_cdc_acm_bulk_out
    usbd_cdc_if.o(.data.cdc_in_ep) refers to usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_in) for usbd_cdc_acm_bulk_in
    py32f072xx_start_kit.o(.ARM.exidx.text.BSP_GetVersion) refers to py32f072xx_start_kit.o(.text.BSP_GetVersion) for [Anonymous Symbol]
    py32f072xx_start_kit.o(.text.BSP_LED_Init) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    py32f072xx_start_kit.o(.text.BSP_LED_Init) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    py32f072xx_start_kit.o(.text.BSP_LED_Init) refers to py32f072xx_start_kit.o(.data.LED_PORT) for LED_PORT
    py32f072xx_start_kit.o(.ARM.exidx.text.BSP_LED_Init) refers to py32f072xx_start_kit.o(.text.BSP_LED_Init) for [Anonymous Symbol]
    py32f072xx_start_kit.o(.text.BSP_LED_DeInit) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    py32f072xx_start_kit.o(.text.BSP_LED_DeInit) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    py32f072xx_start_kit.o(.text.BSP_LED_DeInit) refers to py32f072xx_start_kit.o(.data.LED_PORT) for LED_PORT
    py32f072xx_start_kit.o(.ARM.exidx.text.BSP_LED_DeInit) refers to py32f072xx_start_kit.o(.text.BSP_LED_DeInit) for [Anonymous Symbol]
    py32f072xx_start_kit.o(.text.BSP_LED_On) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    py32f072xx_start_kit.o(.text.BSP_LED_On) refers to py32f072xx_start_kit.o(.data.LED_PORT) for LED_PORT
    py32f072xx_start_kit.o(.ARM.exidx.text.BSP_LED_On) refers to py32f072xx_start_kit.o(.text.BSP_LED_On) for [Anonymous Symbol]
    py32f072xx_start_kit.o(.text.BSP_LED_Off) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    py32f072xx_start_kit.o(.text.BSP_LED_Off) refers to py32f072xx_start_kit.o(.data.LED_PORT) for LED_PORT
    py32f072xx_start_kit.o(.ARM.exidx.text.BSP_LED_Off) refers to py32f072xx_start_kit.o(.text.BSP_LED_Off) for [Anonymous Symbol]
    py32f072xx_start_kit.o(.text.BSP_LED_Toggle) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_TogglePin) for HAL_GPIO_TogglePin
    py32f072xx_start_kit.o(.text.BSP_LED_Toggle) refers to py32f072xx_start_kit.o(.data.LED_PORT) for LED_PORT
    py32f072xx_start_kit.o(.ARM.exidx.text.BSP_LED_Toggle) refers to py32f072xx_start_kit.o(.text.BSP_LED_Toggle) for [Anonymous Symbol]
    py32f072xx_start_kit.o(.text.BSP_PB_Init) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    py32f072xx_start_kit.o(.text.BSP_PB_Init) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    py32f072xx_start_kit.o(.text.BSP_PB_Init) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    py32f072xx_start_kit.o(.text.BSP_PB_Init) refers to py32f072xx_start_kit.o(.data.BUTTON_PORT) for BUTTON_PORT
    py32f072xx_start_kit.o(.ARM.exidx.text.BSP_PB_Init) refers to py32f072xx_start_kit.o(.text.BSP_PB_Init) for [Anonymous Symbol]
    py32f072xx_start_kit.o(.text.BSP_PB_DeInit) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    py32f072xx_start_kit.o(.text.BSP_PB_DeInit) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    py32f072xx_start_kit.o(.text.BSP_PB_DeInit) refers to py32f072xx_start_kit.o(.data.BUTTON_PORT) for BUTTON_PORT
    py32f072xx_start_kit.o(.ARM.exidx.text.BSP_PB_DeInit) refers to py32f072xx_start_kit.o(.text.BSP_PB_DeInit) for [Anonymous Symbol]
    py32f072xx_start_kit.o(.text.BSP_PB_GetState) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_ReadPin) for HAL_GPIO_ReadPin
    py32f072xx_start_kit.o(.text.BSP_PB_GetState) refers to py32f072xx_start_kit.o(.data.BUTTON_PORT) for BUTTON_PORT
    py32f072xx_start_kit.o(.ARM.exidx.text.BSP_PB_GetState) refers to py32f072xx_start_kit.o(.text.BSP_PB_GetState) for [Anonymous Symbol]
    py32f072xx_start_kit.o(.text.BSP_USART_Config) refers to py32f072_hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    py32f072xx_start_kit.o(.text.BSP_USART_Config) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    py32f072xx_start_kit.o(.text.BSP_USART_Config) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    py32f072xx_start_kit.o(.text.BSP_USART_Config) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    py32f072xx_start_kit.o(.text.BSP_USART_Config) refers to py32f072xx_start_kit.o(.bss.DebugUartHandle) for DebugUartHandle
    py32f072xx_start_kit.o(.ARM.exidx.text.BSP_USART_Config) refers to py32f072xx_start_kit.o(.text.BSP_USART_Config) for [Anonymous Symbol]
    py32f072xx_start_kit.o(.text.fputc) refers to py32f072_hal_uart.o(.text.HAL_UART_Transmit) for HAL_UART_Transmit
    py32f072xx_start_kit.o(.text.fputc) refers to py32f072xx_start_kit.o(.bss.DebugUartHandle) for DebugUartHandle
    py32f072xx_start_kit.o(.ARM.exidx.text.fputc) refers to py32f072xx_start_kit.o(.text.fputc) for [Anonymous Symbol]
    py32f072xx_start_kit.o(.text.fgetc) refers to py32f072_hal_uart.o(.text.HAL_UART_Receive) for HAL_UART_Receive
    py32f072xx_start_kit.o(.text.fgetc) refers to py32f072xx_start_kit.o(.bss.DebugUartHandle) for DebugUartHandle
    py32f072xx_start_kit.o(.ARM.exidx.text.fgetc) refers to py32f072xx_start_kit.o(.text.fgetc) for [Anonymous Symbol]
    py32f072_hal.o(.text.HAL_Init) refers to py32f072_hal.o(.text.HAL_InitTick) for HAL_InitTick
    py32f072_hal.o(.text.HAL_Init) refers to py32f072_hal_msp.o(.text.HAL_MspInit) for HAL_MspInit
    py32f072_hal.o(.ARM.exidx.text.HAL_Init) refers to py32f072_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    py32f072_hal.o(.text.HAL_InitTick) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    py32f072_hal.o(.text.HAL_InitTick) refers to py32f072_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    py32f072_hal.o(.text.HAL_InitTick) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    py32f072_hal.o(.text.HAL_InitTick) refers to py32f072_hal.o(.data.uwTickFreq) for uwTickFreq
    py32f072_hal.o(.text.HAL_InitTick) refers to system_py32f072.o(.data.SystemCoreClock) for SystemCoreClock
    py32f072_hal.o(.text.HAL_InitTick) refers to py32f072_hal.o(.data.uwTickPrio) for uwTickPrio
    py32f072_hal.o(.ARM.exidx.text.HAL_InitTick) refers to py32f072_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_MspInit) refers to py32f072_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    py32f072_hal.o(.text.HAL_DeInit) refers to py32f072_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    py32f072_hal.o(.ARM.exidx.text.HAL_DeInit) refers to py32f072_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to py32f072_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    py32f072_hal.o(.text.HAL_IncTick) refers to py32f072_hal.o(.data.uwTickFreq) for uwTickFreq
    py32f072_hal.o(.text.HAL_IncTick) refers to py32f072_hal.o(.bss.uwTick) for uwTick
    py32f072_hal.o(.ARM.exidx.text.HAL_IncTick) refers to py32f072_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    py32f072_hal.o(.text.HAL_GetTick) refers to py32f072_hal.o(.bss.uwTick) for uwTick
    py32f072_hal.o(.ARM.exidx.text.HAL_GetTick) refers to py32f072_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    py32f072_hal.o(.text.HAL_GetTickPrio) refers to py32f072_hal.o(.data.uwTickPrio) for uwTickPrio
    py32f072_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to py32f072_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    py32f072_hal.o(.text.HAL_SetTickFreq) refers to py32f072_hal.o(.text.HAL_InitTick) for HAL_InitTick
    py32f072_hal.o(.text.HAL_SetTickFreq) refers to py32f072_hal.o(.data.uwTickFreq) for uwTickFreq
    py32f072_hal.o(.text.HAL_SetTickFreq) refers to py32f072_hal.o(.data.uwTickPrio) for uwTickPrio
    py32f072_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to py32f072_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    py32f072_hal.o(.text.HAL_GetTickFreq) refers to py32f072_hal.o(.data.uwTickFreq) for uwTickFreq
    py32f072_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to py32f072_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    py32f072_hal.o(.text.HAL_Delay) refers to py32f072_hal.o(.text.HAL_GetTick) for HAL_GetTick
    py32f072_hal.o(.text.HAL_Delay) refers to py32f072_hal.o(.data.uwTickFreq) for uwTickFreq
    py32f072_hal.o(.ARM.exidx.text.HAL_Delay) refers to py32f072_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to py32f072_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to py32f072_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to py32f072_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to py32f072_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to py32f072_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to py32f072_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to py32f072_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGMCUSleepMode) refers to py32f072_hal.o(.text.HAL_DBGMCU_EnableDBGMCUSleepMode) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGMCUSleepMode) refers to py32f072_hal.o(.text.HAL_DBGMCU_DisableDBGMCUSleepMode) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGMCUStopMode) refers to py32f072_hal.o(.text.HAL_DBGMCU_EnableDBGMCUStopMode) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGMCUStopMode) refers to py32f072_hal.o(.text.HAL_DBGMCU_DisableDBGMCUStopMode) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_TIM3ETRSource) refers to py32f072_hal.o(.text.HAL_SYSCFG_TIM3ETRSource) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_TIM2ETRSource) refers to py32f072_hal.o(.text.HAL_SYSCFG_TIM2ETRSource) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_TIM1ETRSource) refers to py32f072_hal.o(.text.HAL_SYSCFG_TIM1ETRSource) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_TIM3IC1Source) refers to py32f072_hal.o(.text.HAL_SYSCFG_TIM3IC1Source) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_TIM2IC4Source) refers to py32f072_hal.o(.text.HAL_SYSCFG_TIM2IC4Source) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_TIM1IC1Source) refers to py32f072_hal.o(.text.HAL_SYSCFG_TIM1IC1Source) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableGPIONoiseFilter) refers to py32f072_hal.o(.text.HAL_SYSCFG_EnableGPIONoiseFilter) for [Anonymous Symbol]
    py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableGPIONoiseFilter) refers to py32f072_hal.o(.text.HAL_SYSCFG_DisableGPIONoiseFilter) for [Anonymous Symbol]
    py32f072_hal_dma.o(.text.HAL_DMA_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to py32f072_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    py32f072_hal_dma.o(.text.HAL_DMA_DeInit) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to py32f072_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to py32f072_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to py32f072_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to py32f072_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to py32f072_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    py32f072_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to py32f072_hal.o(.text.HAL_GetTick) for HAL_GetTick
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to py32f072_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to py32f072_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to py32f072_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to py32f072_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    py32f072_hal_dma.o(.text.HAL_DMA_ChannelMap) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_ChannelMap) refers to py32f072_hal_dma.o(.text.HAL_DMA_ChannelMap) for [Anonymous Symbol]
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to py32f072_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to py32f072_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    py32f072_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to py32f072_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to py32f072_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    py32f072_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to py32f072_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    py32f072_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to py32f072_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    py32f072_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to py32f072_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    py32f072_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to py32f072_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    py32f072_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.text.HAL_RCC_DeInit) refers to py32f072_hal.o(.text.HAL_GetTick) for HAL_GetTick
    py32f072_hal_rcc.o(.text.HAL_RCC_DeInit) refers to py32f072_hal.o(.text.HAL_InitTick) for HAL_InitTick
    py32f072_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_py32f072.o(.data.SystemCoreClock) for SystemCoreClock
    py32f072_hal_rcc.o(.text.HAL_RCC_DeInit) refers to py32f072_hal.o(.data.uwTickPrio) for uwTickPrio
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to py32f072_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to py32f072_hal.o(.text.HAL_GetTick) for HAL_GetTick
    py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to py32f072_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to py32f072_hal.o(.text.HAL_InitTick) for HAL_InitTick
    py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to system_py32f072.o(.rodata.AHBPrescTable) for AHBPrescTable
    py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to system_py32f072.o(.data.SystemCoreClock) for SystemCoreClock
    py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to py32f072_hal.o(.data.uwTickPrio) for uwTickPrio
    py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to system_py32f072.o(.rodata.HSIFreqTable) for HSIFreqTable
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to py32f072_hal_rcc.o(.rodata..L__const.HAL_RCC_GetSysClockFreq.hsiValue) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to py32f072_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to py32f072_hal.o(.text.HAL_GetTick) for HAL_GetTick
    py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to py32f072_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to py32f072_hal.o(.text.HAL_InitTick) for HAL_InitTick
    py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_py32f072.o(.rodata.AHBPrescTable) for AHBPrescTable
    py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_py32f072.o(.data.SystemCoreClock) for SystemCoreClock
    py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to py32f072_hal.o(.data.uwTickPrio) for uwTickPrio
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to py32f072_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to py32f072_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_py32f072.o(.data.SystemCoreClock) for SystemCoreClock
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to py32f072_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_py32f072.o(.data.SystemCoreClock) for SystemCoreClock
    py32f072_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_py32f072.o(.rodata.APBPrescTable) for APBPrescTable
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to py32f072_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to py32f072_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to py32f072_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to py32f072_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableLSECSS) refers to py32f072_hal_rcc.o(.text.HAL_RCC_EnableLSECSS) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableLSECSS) refers to py32f072_hal_rcc.o(.text.HAL_RCC_DisableLSECSS) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to py32f072_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    py32f072_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to py32f072_hal_rcc.o(.text.HAL_RCC_LSECSSCallback) for HAL_RCC_LSECSSCallback
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to py32f072_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to py32f072_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_LSECSSCallback) refers to py32f072_hal_rcc.o(.text.HAL_RCC_LSECSSCallback) for [Anonymous Symbol]
    py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to py32f072_hal.o(.text.HAL_GetTick) for HAL_GetTick
    py32f072_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    py32f072_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to py32f072_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    py32f072_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to py32f072_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for HAL_PWR_EnableBkUpAccess
    py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to py32f072_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for HAL_PWR_DisableBkUpAccess
    py32f072_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSCO) refers to py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) for [Anonymous Symbol]
    py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) refers to py32f072_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for HAL_PWR_EnableBkUpAccess
    py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) refers to py32f072_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for HAL_PWR_DisableBkUpAccess
    py32f072_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSCO) refers to py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to py32f072_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to py32f072_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to py32f072_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to py32f072_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to py32f072_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to py32f072_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigStopMode) refers to py32f072_hal_pwr.o(.text.HAL_PWR_ConfigStopMode) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigBIAS) refers to py32f072_hal_pwr.o(.text.HAL_PWR_ConfigBIAS) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to py32f072_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to py32f072_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to py32f072_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to py32f072_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to py32f072_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to py32f072_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to py32f072_hal_pwr.o(.text.HAL_PWR_PVD_Callback) for HAL_PWR_PVD_Callback
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to py32f072_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_Callback) refers to py32f072_hal_pwr.o(.text.HAL_PWR_PVD_Callback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_Init) refers to py32f072_hal_uart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    py32f072_hal_uart.o(.text.HAL_UART_Init) refers to py32f072_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Init) refers to py32f072_hal_uart.o(.text.HAL_UART_Init) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit) refers to py32f072_hal_uart.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.UART_SetConfig) refers to py32f072_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    py32f072_hal_uart.o(.text.UART_SetConfig) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    py32f072_hal_uart.o(.ARM.exidx.text.UART_SetConfig) refers to py32f072_hal_uart.o(.text.UART_SetConfig) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to py32f072_hal_uart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    py32f072_hal_uart.o(.text.HAL_HalfDuplex_Init) refers to py32f072_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init) refers to py32f072_hal_uart.o(.text.HAL_HalfDuplex_Init) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_LIN_Init) refers to py32f072_hal_uart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    py32f072_hal_uart.o(.text.HAL_LIN_Init) refers to py32f072_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init) refers to py32f072_hal_uart.o(.text.HAL_LIN_Init) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to py32f072_hal_uart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    py32f072_hal_uart.o(.text.HAL_MultiProcessor_Init) refers to py32f072_hal_uart.o(.text.UART_SetConfig) for UART_SetConfig
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init) refers to py32f072_hal_uart.o(.text.HAL_MultiProcessor_Init) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_DeInit) refers to py32f072_hal_uart.o(.text.HAL_UART_MspDeInit) for HAL_UART_MspDeInit
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit) refers to py32f072_hal_uart.o(.text.HAL_UART_DeInit) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to py32f072_hal_uart.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_Transmit) refers to py32f072_hal.o(.text.HAL_GetTick) for HAL_GetTick
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit) refers to py32f072_hal_uart.o(.text.HAL_UART_Transmit) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_Receive) refers to py32f072_hal.o(.text.HAL_GetTick) for HAL_GetTick
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive) refers to py32f072_hal_uart.o(.text.HAL_UART_Receive) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT) refers to py32f072_hal_uart.o(.text.HAL_UART_Transmit_IT) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT) refers to py32f072_hal_uart.o(.text.HAL_UART_Receive_IT) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to py32f072_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    py32f072_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to py32f072_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    py32f072_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to py32f072_hal_uart.o(.text.UART_DMATxHalfCplt) for UART_DMATxHalfCplt
    py32f072_hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to py32f072_hal_uart.o(.text.UART_DMATransmitCplt) for UART_DMATransmitCplt
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA) refers to py32f072_hal_uart.o(.text.HAL_UART_Transmit_DMA) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.UART_DMATransmitCplt) refers to py32f072_hal_uart.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    py32f072_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt) refers to py32f072_hal_uart.o(.text.UART_DMATransmitCplt) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.UART_DMATxHalfCplt) refers to py32f072_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for HAL_UART_TxHalfCpltCallback
    py32f072_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt) refers to py32f072_hal_uart.o(.text.UART_DMATxHalfCplt) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.UART_DMAError) refers to py32f072_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    py32f072_hal_uart.o(.ARM.exidx.text.UART_DMAError) refers to py32f072_hal_uart.o(.text.UART_DMAError) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to py32f072_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    py32f072_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to py32f072_hal_uart.o(.text.UART_DMAError) for UART_DMAError
    py32f072_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to py32f072_hal_uart.o(.text.UART_DMARxHalfCplt) for UART_DMARxHalfCplt
    py32f072_hal_uart.o(.text.HAL_UART_Receive_DMA) refers to py32f072_hal_uart.o(.text.UART_DMAReceiveCplt) for UART_DMAReceiveCplt
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA) refers to py32f072_hal_uart.o(.text.HAL_UART_Receive_DMA) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.UART_DMAReceiveCplt) refers to py32f072_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    py32f072_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt) refers to py32f072_hal_uart.o(.text.UART_DMAReceiveCplt) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.UART_DMARxHalfCplt) refers to py32f072_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for HAL_UART_RxHalfCpltCallback
    py32f072_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt) refers to py32f072_hal_uart.o(.text.UART_DMARxHalfCplt) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause) refers to py32f072_hal_uart.o(.text.HAL_UART_DMAPause) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume) refers to py32f072_hal_uart.o(.text.HAL_UART_DMAResume) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_DMAStop) refers to py32f072_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop) refers to py32f072_hal_uart.o(.text.HAL_UART_DMAStop) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_Abort) refers to py32f072_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    py32f072_hal_uart.o(.text.HAL_UART_Abort) refers to py32f072_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort) refers to py32f072_hal_uart.o(.text.HAL_UART_Abort) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to py32f072_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    py32f072_hal_uart.o(.text.HAL_UART_AbortTransmit) refers to py32f072_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortTransmit) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_AbortReceive) refers to py32f072_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    py32f072_hal_uart.o(.text.HAL_UART_AbortReceive) refers to py32f072_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortReceive) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_Abort_IT) refers to py32f072_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    py32f072_hal_uart.o(.text.HAL_UART_Abort_IT) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    py32f072_hal_uart.o(.text.HAL_UART_Abort_IT) refers to py32f072_hal_uart.o(.text.UART_DMATxAbortCallback) for UART_DMATxAbortCallback
    py32f072_hal_uart.o(.text.HAL_UART_Abort_IT) refers to py32f072_hal_uart.o(.text.UART_DMARxAbortCallback) for UART_DMARxAbortCallback
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT) refers to py32f072_hal_uart.o(.text.HAL_UART_Abort_IT) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.UART_DMATxAbortCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    py32f072_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback) refers to py32f072_hal_uart.o(.text.UART_DMATxAbortCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.UART_DMARxAbortCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for HAL_UART_AbortCpltCallback
    py32f072_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback) refers to py32f072_hal_uart.o(.text.UART_DMARxAbortCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortCpltCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    py32f072_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to py32f072_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    py32f072_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) refers to py32f072_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for UART_DMATxOnlyAbortCallback
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortTransmit_IT) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for HAL_UART_AbortTransmitCpltCallback
    py32f072_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback) refers to py32f072_hal_uart.o(.text.UART_DMATxOnlyAbortCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    py32f072_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to py32f072_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    py32f072_hal_uart.o(.text.HAL_UART_AbortReceive_IT) refers to py32f072_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for UART_DMARxOnlyAbortCallback
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortReceive_IT) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for HAL_UART_AbortReceiveCpltCallback
    py32f072_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback) refers to py32f072_hal_uart.o(.text.UART_DMARxOnlyAbortCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.HAL_UART_IRQHandler) refers to py32f072_hal_uart.o(.text.HAL_UART_IdleFrameDetectCpltCallback) for HAL_UART_IdleFrameDetectCpltCallback
    py32f072_hal_uart.o(.text.HAL_UART_IRQHandler) refers to py32f072_hal_uart.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    py32f072_hal_uart.o(.text.HAL_UART_IRQHandler) refers to py32f072_hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    py32f072_hal_uart.o(.text.HAL_UART_IRQHandler) refers to py32f072_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    py32f072_hal_uart.o(.text.HAL_UART_IRQHandler) refers to py32f072_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    py32f072_hal_uart.o(.text.HAL_UART_IRQHandler) refers to py32f072_hal_uart.o(.text.UART_DMAAbortOnError) for UART_DMAAbortOnError
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler) refers to py32f072_hal_uart.o(.text.HAL_UART_IRQHandler) for [Anonymous Symbol]
    py32f072_hal_uart.o(.text.UART_DMAAbortOnError) refers to py32f072_hal_uart.o(.text.HAL_UART_ErrorCallback) for HAL_UART_ErrorCallback
    py32f072_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError) refers to py32f072_hal_uart.o(.text.UART_DMAAbortOnError) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_ErrorCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_IdleFrameDetectCpltCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_IdleFrameDetectCpltCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_TxCpltCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_RxCpltCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback) refers to py32f072_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak) refers to py32f072_hal_uart.o(.text.HAL_LIN_SendBreak) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode) refers to py32f072_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_ExitMuteMode) refers to py32f072_hal_uart.o(.text.HAL_MultiProcessor_ExitMuteMode) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter) refers to py32f072_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver) refers to py32f072_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState) refers to py32f072_hal_uart.o(.text.HAL_UART_GetState) for [Anonymous Symbol]
    py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError) refers to py32f072_hal_uart.o(.text.HAL_UART_GetError) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_event_connect_handler) refers to usbd_core.o(.bss.usbd_intf_head) for usbd_intf_head
    usbd_core.o(.ARM.exidx.text.usbd_event_connect_handler) refers to usbd_core.o(.text.usbd_event_connect_handler) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_event_disconnect_handler) refers to usbd_core.o(.bss.usbd_intf_head) for usbd_intf_head
    usbd_core.o(.ARM.exidx.text.usbd_event_disconnect_handler) refers to usbd_core.o(.text.usbd_event_disconnect_handler) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_event_resume_handler) refers to usbd_core.o(.bss.usbd_intf_head) for usbd_intf_head
    usbd_core.o(.ARM.exidx.text.usbd_event_resume_handler) refers to usbd_core.o(.text.usbd_event_resume_handler) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_event_suspend_handler) refers to usbd_core.o(.bss.usbd_intf_head) for usbd_intf_head
    usbd_core.o(.ARM.exidx.text.usbd_event_suspend_handler) refers to usbd_core.o(.text.usbd_event_suspend_handler) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_event_reset_handler) refers to usb_dc_py32.o(.text.usbd_set_address) for usbd_set_address
    usbd_core.o(.text.usbd_event_reset_handler) refers to usb_dc_py32.o(.text.usbd_ep_open) for usbd_ep_open
    usbd_core.o(.text.usbd_event_reset_handler) refers to usbd_core.o(.noncacheable) for usbd_core_cfg
    usbd_core.o(.text.usbd_event_reset_handler) refers to usbd_core.o(.bss.usbd_intf_head) for usbd_intf_head
    usbd_core.o(.ARM.exidx.text.usbd_event_reset_handler) refers to usbd_core.o(.text.usbd_event_reset_handler) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_event_ep0_setup_complete_handler) refers to usb_dc_py32.o(.text.usbd_ep_set_stall) for usbd_ep_set_stall
    usbd_core.o(.text.usbd_event_ep0_setup_complete_handler) refers to usb_dc_py32.o(.text.usbd_ep_start_read) for usbd_ep_start_read
    usbd_core.o(.text.usbd_event_ep0_setup_complete_handler) refers to usbd_core.o(.text.usbd_setup_request_handler) for usbd_setup_request_handler
    usbd_core.o(.text.usbd_event_ep0_setup_complete_handler) refers to memcpya.o(.text) for __aeabi_memcpy
    usbd_core.o(.text.usbd_event_ep0_setup_complete_handler) refers to usb_dc_py32.o(.text.usbd_ep_start_write) for usbd_ep_start_write
    usbd_core.o(.text.usbd_event_ep0_setup_complete_handler) refers to usbd_core.o(.noncacheable) for usbd_core_cfg
    usbd_core.o(.ARM.exidx.text.usbd_event_ep0_setup_complete_handler) refers to usbd_core.o(.text.usbd_event_ep0_setup_complete_handler) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_setup_request_handler) refers to usb_dc_py32.o(.text.usbd_ep_is_stalled) for usbd_ep_is_stalled
    usbd_core.o(.text.usbd_setup_request_handler) refers to usbd_core.o(.noncacheable) for usbd_core_cfg
    usbd_core.o(.text.usbd_setup_request_handler) refers to usbd_core.o(.bss.msosv1_desc) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_setup_request_handler) refers to usbd_core.o(.bss.usbd_intf_head) for usbd_intf_head
    usbd_core.o(.text.usbd_setup_request_handler) refers to usb_dc_py32.o(.text.usbd_ep_set_stall) for usbd_ep_set_stall
    usbd_core.o(.text.usbd_setup_request_handler) refers to usb_dc_py32.o(.text.usbd_set_address) for usbd_set_address
    usbd_core.o(.text.usbd_setup_request_handler) refers to usb_dc_py32.o(.text.usbd_ep_open) for usbd_ep_open
    usbd_core.o(.text.usbd_setup_request_handler) refers to usb_dc_py32.o(.text.usbd_ep_close) for usbd_ep_close
    usbd_core.o(.text.usbd_setup_request_handler) refers to usb_dc_py32.o(.text.usbd_ep_clear_stall) for usbd_ep_clear_stall
    usbd_core.o(.text.usbd_setup_request_handler) refers to usbd_cdc_if.o(.text.usbd_configure_done_callback) for usbd_configure_done_callback
    usbd_core.o(.text.usbd_setup_request_handler) refers to usbd_core.o(.bss.msosv2_desc) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_setup_request_handler) refers to usbd_core.o(.bss.bos_desc) for [Anonymous Symbol]
    usbd_core.o(.ARM.exidx.text.usbd_setup_request_handler) refers to usbd_core.o(.text.usbd_setup_request_handler) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_event_ep_in_complete_handler) refers to usb_dc_py32.o(.text.usbd_ep_start_write) for usbd_ep_start_write
    usbd_core.o(.text.usbd_event_ep_in_complete_handler) refers to usb_dc_py32.o(.text.usbd_ep_start_read) for usbd_ep_start_read
    usbd_core.o(.text.usbd_event_ep_in_complete_handler) refers to usbd_core.o(.noncacheable) for usbd_core_cfg
    usbd_core.o(.ARM.exidx.text.usbd_event_ep_in_complete_handler) refers to usbd_core.o(.text.usbd_event_ep_in_complete_handler) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_event_ep_out_complete_handler) refers to usbd_core.o(.text.usbd_setup_request_handler) for usbd_setup_request_handler
    usbd_core.o(.text.usbd_event_ep_out_complete_handler) refers to usb_dc_py32.o(.text.usbd_ep_start_write) for usbd_ep_start_write
    usbd_core.o(.text.usbd_event_ep_out_complete_handler) refers to usb_dc_py32.o(.text.usbd_ep_start_read) for usbd_ep_start_read
    usbd_core.o(.text.usbd_event_ep_out_complete_handler) refers to usb_dc_py32.o(.text.usbd_ep_set_stall) for usbd_ep_set_stall
    usbd_core.o(.text.usbd_event_ep_out_complete_handler) refers to usbd_core.o(.noncacheable) for usbd_core_cfg
    usbd_core.o(.ARM.exidx.text.usbd_event_ep_out_complete_handler) refers to usbd_core.o(.text.usbd_event_ep_out_complete_handler) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_desc_register) refers to usbd_core.o(.noncacheable) for usbd_core_cfg
    usbd_core.o(.ARM.exidx.text.usbd_desc_register) refers to usbd_core.o(.text.usbd_desc_register) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_msosv1_desc_register) refers to usbd_core.o(.bss.msosv1_desc) for [Anonymous Symbol]
    usbd_core.o(.ARM.exidx.text.usbd_msosv1_desc_register) refers to usbd_core.o(.text.usbd_msosv1_desc_register) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_msosv2_desc_register) refers to usbd_core.o(.bss.msosv2_desc) for [Anonymous Symbol]
    usbd_core.o(.ARM.exidx.text.usbd_msosv2_desc_register) refers to usbd_core.o(.text.usbd_msosv2_desc_register) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_bos_desc_register) refers to usbd_core.o(.bss.bos_desc) for [Anonymous Symbol]
    usbd_core.o(.ARM.exidx.text.usbd_bos_desc_register) refers to usbd_core.o(.text.usbd_bos_desc_register) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_add_interface) refers to usbd_core.o(.noncacheable) for usbd_core_cfg
    usbd_core.o(.text.usbd_add_interface) refers to usbd_core.o(.bss.usbd_intf_head) for usbd_intf_head
    usbd_core.o(.ARM.exidx.text.usbd_add_interface) refers to usbd_core.o(.text.usbd_add_interface) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_add_endpoint) refers to usbd_core.o(.noncacheable) for usbd_core_cfg
    usbd_core.o(.ARM.exidx.text.usbd_add_endpoint) refers to usbd_core.o(.text.usbd_add_endpoint) for [Anonymous Symbol]
    usbd_core.o(.text.usb_device_is_configured) refers to usbd_core.o(.noncacheable) for usbd_core_cfg
    usbd_core.o(.ARM.exidx.text.usb_device_is_configured) refers to usbd_core.o(.text.usb_device_is_configured) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_initialize) refers to usb_dc_py32.o(.text.usb_dc_init) for usb_dc_init
    usbd_core.o(.ARM.exidx.text.usbd_initialize) refers to usbd_core.o(.text.usbd_initialize) for [Anonymous Symbol]
    usbd_core.o(.text.usbd_deinitialize) refers to usb_dc_py32.o(.text.usb_dc_deinit) for usb_dc_deinit
    usbd_core.o(.text.usbd_deinitialize) refers to usbd_core.o(.noncacheable) for usbd_core_cfg
    usbd_core.o(.text.usbd_deinitialize) refers to usbd_core.o(.bss.usbd_intf_head) for usbd_intf_head
    usbd_core.o(.ARM.exidx.text.usbd_deinitialize) refers to usbd_core.o(.text.usbd_deinitialize) for [Anonymous Symbol]
    usb_dc_py32.o(.ARM.exidx.text.usb_dc_low_level_init) refers to usb_dc_py32.o(.text.usb_dc_low_level_init) for [Anonymous Symbol]
    usb_dc_py32.o(.ARM.exidx.text.usb_dc_low_level_deinit) refers to usb_dc_py32.o(.text.usb_dc_low_level_deinit) for [Anonymous Symbol]
    usb_dc_py32.o(.text.usb_dc_init) refers to usb_dc_py32.o(.text.usb_dc_low_level_init) for usb_dc_low_level_init
    usb_dc_py32.o(.ARM.exidx.text.usb_dc_init) refers to usb_dc_py32.o(.text.usb_dc_init) for [Anonymous Symbol]
    usb_dc_py32.o(.ARM.exidx.text.usb_dc_deinit) refers to usb_dc_py32.o(.text.usb_dc_deinit) for [Anonymous Symbol]
    usb_dc_py32.o(.text.usbd_set_address) refers to usb_dc_py32.o(.bss.g_pyusb_udc) for g_pyusb_udc
    usb_dc_py32.o(.ARM.exidx.text.usbd_set_address) refers to usb_dc_py32.o(.text.usbd_set_address) for [Anonymous Symbol]
    usb_dc_py32.o(.text.usbd_ep_open) refers to usb_dc_py32.o(.bss.g_pyusb_udc) for g_pyusb_udc
    usb_dc_py32.o(.ARM.exidx.text.usbd_ep_open) refers to usb_dc_py32.o(.text.usbd_ep_open) for [Anonymous Symbol]
    usb_dc_py32.o(.ARM.exidx.text.usbd_ep_close) refers to usb_dc_py32.o(.text.usbd_ep_close) for [Anonymous Symbol]
    usb_dc_py32.o(.text.usbd_ep_set_stall) refers to usb_dc_py32.o(.bss.usb_ep0_state) for [Anonymous Symbol]
    usb_dc_py32.o(.ARM.exidx.text.usbd_ep_set_stall) refers to usb_dc_py32.o(.text.usbd_ep_set_stall) for [Anonymous Symbol]
    usb_dc_py32.o(.ARM.exidx.text.usbd_ep_clear_stall) refers to usb_dc_py32.o(.text.usbd_ep_clear_stall) for [Anonymous Symbol]
    usb_dc_py32.o(.ARM.exidx.text.usbd_ep_is_stalled) refers to usb_dc_py32.o(.text.usbd_ep_is_stalled) for [Anonymous Symbol]
    usb_dc_py32.o(.text.usbd_ep_start_write) refers to usb_dc_py32.o(.bss.g_pyusb_udc) for g_pyusb_udc
    usb_dc_py32.o(.text.usbd_ep_start_write) refers to usb_dc_py32.o(.bss.usb_ep0_state) for [Anonymous Symbol]
    usb_dc_py32.o(.ARM.exidx.text.usbd_ep_start_write) refers to usb_dc_py32.o(.text.usbd_ep_start_write) for [Anonymous Symbol]
    usb_dc_py32.o(.text.usbd_ep_start_read) refers to usb_dc_py32.o(.bss.g_pyusb_udc) for g_pyusb_udc
    usb_dc_py32.o(.text.usbd_ep_start_read) refers to usb_dc_py32.o(.bss.usb_ep0_state) for [Anonymous Symbol]
    usb_dc_py32.o(.ARM.exidx.text.usbd_ep_start_read) refers to usb_dc_py32.o(.text.usbd_ep_start_read) for [Anonymous Symbol]
    usb_dc_py32.o(.text.USBD_IRQHandler) refers to memseta.o(.text) for __aeabi_memclr8
    usb_dc_py32.o(.text.USBD_IRQHandler) refers to usbd_core.o(.text.usbd_event_reset_handler) for usbd_event_reset_handler
    usb_dc_py32.o(.text.USBD_IRQHandler) refers to usbd_core.o(.text.usbd_event_ep_out_complete_handler) for usbd_event_ep_out_complete_handler
    usb_dc_py32.o(.text.USBD_IRQHandler) refers to usbd_core.o(.text.usbd_event_ep_in_complete_handler) for usbd_event_ep_in_complete_handler
    usb_dc_py32.o(.text.USBD_IRQHandler) refers to usbd_core.o(.text.usbd_event_ep0_setup_complete_handler) for usbd_event_ep0_setup_complete_handler
    usb_dc_py32.o(.text.USBD_IRQHandler) refers to usb_dc_py32.o(.bss.g_pyusb_udc) for g_pyusb_udc
    usb_dc_py32.o(.text.USBD_IRQHandler) refers to usb_dc_py32.o(.bss.usb_ep0_state) for [Anonymous Symbol]
    usb_dc_py32.o(.ARM.exidx.text.USBD_IRQHandler) refers to usb_dc_py32.o(.text.USBD_IRQHandler) for [Anonymous Symbol]
    usbd_cdc.o(.text.usbd_cdc_acm_init_intf) refers to usbd_cdc.o(.text.cdc_notify_handler) for cdc_notify_handler
    usbd_cdc.o(.text.usbd_cdc_acm_init_intf) refers to usbd_cdc.o(.text.cdc_acm_class_interface_request_handler) for cdc_acm_class_interface_request_handler
    usbd_cdc.o(.ARM.exidx.text.usbd_cdc_acm_init_intf) refers to usbd_cdc.o(.text.usbd_cdc_acm_init_intf) for [Anonymous Symbol]
    usbd_cdc.o(.text.cdc_acm_class_interface_request_handler) refers to memcpya.o(.text) for __aeabi_memcpy
    usbd_cdc.o(.text.cdc_acm_class_interface_request_handler) refers to usbd_cdc.o(.text.usbd_cdc_acm_set_line_coding) for usbd_cdc_acm_set_line_coding
    usbd_cdc.o(.text.cdc_acm_class_interface_request_handler) refers to usbd_cdc_if.o(.text.usbd_cdc_acm_set_dtr) for usbd_cdc_acm_set_dtr
    usbd_cdc.o(.text.cdc_acm_class_interface_request_handler) refers to usbd_cdc.o(.text.usbd_cdc_acm_set_rts) for usbd_cdc_acm_set_rts
    usbd_cdc.o(.text.cdc_acm_class_interface_request_handler) refers to usbd_cdc.o(.text.usbd_cdc_acm_get_line_coding) for usbd_cdc_acm_get_line_coding
    usbd_cdc.o(.ARM.exidx.text.cdc_acm_class_interface_request_handler) refers to usbd_cdc.o(.text.cdc_acm_class_interface_request_handler) for [Anonymous Symbol]
    usbd_cdc.o(.ARM.exidx.text.cdc_notify_handler) refers to usbd_cdc.o(.text.cdc_notify_handler) for [Anonymous Symbol]
    usbd_cdc.o(.ARM.exidx.text.usbd_cdc_acm_set_line_coding) refers to usbd_cdc.o(.text.usbd_cdc_acm_set_line_coding) for [Anonymous Symbol]
    usbd_cdc.o(.ARM.exidx.text.usbd_cdc_acm_get_line_coding) refers to usbd_cdc.o(.text.usbd_cdc_acm_get_line_coding) for [Anonymous Symbol]
    usbd_cdc.o(.ARM.exidx.text.usbd_cdc_acm_set_dtr) refers to usbd_cdc.o(.text.usbd_cdc_acm_set_dtr) for [Anonymous Symbol]
    usbd_cdc.o(.ARM.exidx.text.usbd_cdc_acm_set_rts) refers to usbd_cdc.o(.text.usbd_cdc_acm_set_rts) for [Anonymous Symbol]
    usbd_cdc.o(.data.stop_name) refers to usbd_cdc.o(.rodata.str1.1) for [Anonymous Symbol]
    usbd_cdc.o(.data.parity_name) refers to usbd_cdc.o(.rodata.str1.1) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_py32f072xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_py32f072xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing startup_py32f072xx.o(HEAP), (512 bytes).
    Removing system_py32f072.o(.text), (0 bytes).
    Removing system_py32f072.o(.text.SystemCoreClockUpdate), (156 bytes).
    Removing system_py32f072.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_py32f072.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_py32f072.o(.rodata.APBPrescTable), (32 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.text.APP_ErrorHandler), (2 bytes).
    Removing main.o(.ARM.exidx.text.APP_ErrorHandler), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing py32f072_hal_msp.o(.text), (0 bytes).
    Removing py32f072_hal_msp.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing py32f072_it.o(.text), (0 bytes).
    Removing py32f072_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing py32f072_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing py32f072_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing py32f072_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing py32f072_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing py32f072_it.o(.ARM.exidx.text.USB_IRQHandler), (8 bytes).
    Removing usbd_cdc_if.o(.text), (0 bytes).
    Removing usbd_cdc_if.o(.ARM.exidx.text.usbd_configure_done_callback), (8 bytes).
    Removing usbd_cdc_if.o(.ARM.exidx.text.usbd_cdc_acm_bulk_out), (8 bytes).
    Removing usbd_cdc_if.o(.ARM.exidx.text.usbd_cdc_acm_bulk_in), (8 bytes).
    Removing usbd_cdc_if.o(.ARM.exidx.text.cdc_acm_init), (8 bytes).
    Removing usbd_cdc_if.o(.ARM.exidx.text.usbd_cdc_acm_set_dtr), (8 bytes).
    Removing usbd_cdc_if.o(.ARM.exidx.text.cdc_acm_data_send_with_dtr_test), (8 bytes).
    Removing usbd_cdc_if.o(.data.dma_in_ep_idx), (1 bytes).
    Removing usbd_cdc_if.o(.data.dma_out_ep_idx), (1 bytes).
    Removing py32f072xx_start_kit.o(.text), (0 bytes).
    Removing py32f072xx_start_kit.o(.text.BSP_GetVersion), (6 bytes).
    Removing py32f072xx_start_kit.o(.ARM.exidx.text.BSP_GetVersion), (8 bytes).
    Removing py32f072xx_start_kit.o(.text.BSP_LED_Init), (72 bytes).
    Removing py32f072xx_start_kit.o(.ARM.exidx.text.BSP_LED_Init), (8 bytes).
    Removing py32f072xx_start_kit.o(.text.BSP_LED_DeInit), (32 bytes).
    Removing py32f072xx_start_kit.o(.ARM.exidx.text.BSP_LED_DeInit), (8 bytes).
    Removing py32f072xx_start_kit.o(.text.BSP_LED_On), (24 bytes).
    Removing py32f072xx_start_kit.o(.ARM.exidx.text.BSP_LED_On), (8 bytes).
    Removing py32f072xx_start_kit.o(.text.BSP_LED_Off), (24 bytes).
    Removing py32f072xx_start_kit.o(.ARM.exidx.text.BSP_LED_Off), (8 bytes).
    Removing py32f072xx_start_kit.o(.text.BSP_LED_Toggle), (20 bytes).
    Removing py32f072xx_start_kit.o(.ARM.exidx.text.BSP_LED_Toggle), (8 bytes).
    Removing py32f072xx_start_kit.o(.text.BSP_PB_Init), (112 bytes).
    Removing py32f072xx_start_kit.o(.ARM.exidx.text.BSP_PB_Init), (8 bytes).
    Removing py32f072xx_start_kit.o(.text.BSP_PB_DeInit), (28 bytes).
    Removing py32f072xx_start_kit.o(.ARM.exidx.text.BSP_PB_DeInit), (8 bytes).
    Removing py32f072xx_start_kit.o(.text.BSP_PB_GetState), (20 bytes).
    Removing py32f072xx_start_kit.o(.ARM.exidx.text.BSP_PB_GetState), (8 bytes).
    Removing py32f072xx_start_kit.o(.text.BSP_USART_Config), (164 bytes).
    Removing py32f072xx_start_kit.o(.ARM.exidx.text.BSP_USART_Config), (8 bytes).
    Removing py32f072xx_start_kit.o(.text.fputc), (32 bytes).
    Removing py32f072xx_start_kit.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing py32f072xx_start_kit.o(.text.fgetc), (28 bytes).
    Removing py32f072xx_start_kit.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing py32f072xx_start_kit.o(.data.LED_PORT), (4 bytes).
    Removing py32f072xx_start_kit.o(.rodata.LED_PIN), (2 bytes).
    Removing py32f072xx_start_kit.o(.data.BUTTON_PORT), (4 bytes).
    Removing py32f072xx_start_kit.o(.rodata.BUTTON_PIN), (2 bytes).
    Removing py32f072xx_start_kit.o(.rodata.BUTTON_IRQn), (1 bytes).
    Removing py32f072xx_start_kit.o(.bss.DebugUartHandle), (76 bytes).
    Removing py32f072_hal.o(.text), (0 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_DeInit), (36 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_SetTickFreq), (44 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_SuspendTick), (16 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_ResumeTick), (16 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_GetHalVersion), (6 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_GetREVID), (12 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_DBGMCU_EnableDBGMCUSleepMode), (16 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGMCUSleepMode), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_DBGMCU_DisableDBGMCUSleepMode), (16 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGMCUSleepMode), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_DBGMCU_EnableDBGMCUStopMode), (16 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGMCUStopMode), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_DBGMCU_DisableDBGMCUStopMode), (16 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGMCUStopMode), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_SYSCFG_TIM3ETRSource), (20 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_TIM3ETRSource), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_SYSCFG_TIM2ETRSource), (20 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_TIM2ETRSource), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_SYSCFG_TIM1ETRSource), (20 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_TIM1ETRSource), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_SYSCFG_TIM3IC1Source), (20 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_TIM3IC1Source), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_SYSCFG_TIM2IC4Source), (20 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_TIM2IC4Source), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_SYSCFG_TIM1IC1Source), (20 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_TIM1IC1Source), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_SYSCFG_EnableGPIONoiseFilter), (76 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableGPIONoiseFilter), (8 bytes).
    Removing py32f072_hal.o(.text.HAL_SYSCFG_DisableGPIONoiseFilter), (76 bytes).
    Removing py32f072_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableGPIONoiseFilter), (8 bytes).
    Removing py32f072_hal_dma.o(.text), (0 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_Init), (120 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_DeInit), (88 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_Start), (104 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_Start_IT), (128 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_Abort), (58 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_Abort_IT), (164 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_PollForTransfer), (596 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_IRQHandler), (380 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_RegisterCallback), (70 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (88 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_ChannelMap), (92 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_ChannelMap), (8 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_GetState), (6 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing py32f072_hal_dma.o(.text.HAL_DMA_GetError), (4 bytes).
    Removing py32f072_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing py32f072_hal_cortex.o(.text), (0 bytes).
    Removing py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing py32f072_hal_cortex.o(.text.HAL_NVIC_EnableIRQ), (20 bytes).
    Removing py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing py32f072_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (20 bytes).
    Removing py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing py32f072_hal_cortex.o(.text.HAL_NVIC_SystemReset), (28 bytes).
    Removing py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing py32f072_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing py32f072_hal_cortex.o(.text.HAL_NVIC_GetPriority), (48 bytes).
    Removing py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing py32f072_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (20 bytes).
    Removing py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing py32f072_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (20 bytes).
    Removing py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing py32f072_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (20 bytes).
    Removing py32f072_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing py32f072_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (28 bytes).
    Removing py32f072_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing py32f072_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing py32f072_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing py32f072_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing py32f072_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing py32f072_hal_gpio.o(.text), (0 bytes).
    Removing py32f072_hal_gpio.o(.text.HAL_GPIO_Init), (404 bytes).
    Removing py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing py32f072_hal_gpio.o(.text.HAL_GPIO_DeInit), (256 bytes).
    Removing py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing py32f072_hal_gpio.o(.text.HAL_GPIO_ReadPin), (10 bytes).
    Removing py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing py32f072_hal_gpio.o(.text.HAL_GPIO_WritePin), (16 bytes).
    Removing py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing py32f072_hal_gpio.o(.text.HAL_GPIO_TogglePin), (18 bytes).
    Removing py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing py32f072_hal_gpio.o(.text.HAL_GPIO_LockPin), (44 bytes).
    Removing py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing py32f072_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (2 bytes).
    Removing py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing py32f072_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (24 bytes).
    Removing py32f072_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing py32f072_hal_rcc.o(.text), (0 bytes).
    Removing py32f072_hal_rcc.o(.text.HAL_RCC_DeInit), (196 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing py32f072_hal_rcc.o(.text.HAL_RCC_MCOConfig), (196 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing py32f072_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq), (12 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing py32f072_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq), (40 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing py32f072_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (136 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing py32f072_hal_rcc.o(.text.HAL_RCC_GetClockConfig), (52 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing py32f072_hal_rcc.o(.text.HAL_RCC_EnableCSS), (20 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing py32f072_hal_rcc.o(.text.HAL_RCC_EnableLSECSS), (16 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableLSECSS), (8 bytes).
    Removing py32f072_hal_rcc.o(.text.HAL_RCC_DisableLSECSS), (16 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableLSECSS), (8 bytes).
    Removing py32f072_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (44 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing py32f072_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing py32f072_hal_rcc.o(.text.HAL_RCC_LSECSSCallback), (2 bytes).
    Removing py32f072_hal_rcc.o(.ARM.exidx.text.HAL_RCC_LSECSSCallback), (8 bytes).
    Removing py32f072_hal_rcc_ex.o(.text), (0 bytes).
    Removing py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (372 bytes).
    Removing py32f072_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (88 bytes).
    Removing py32f072_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (604 bytes).
    Removing py32f072_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO), (108 bytes).
    Removing py32f072_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSCO), (8 bytes).
    Removing py32f072_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO), (92 bytes).
    Removing py32f072_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSCO), (8 bytes).
    Removing py32f072_hal_pwr.o(.text), (0 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_DeInit), (24 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (20 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (20 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (140 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_EnablePVD), (16 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_DisablePVD), (16 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_ConfigStopMode), (36 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigStopMode), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_ConfigBIAS), (40 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigBIAS), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (32 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (64 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (16 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (16 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (16 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (16 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (28 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing py32f072_hal_pwr.o(.text.HAL_PWR_PVD_Callback), (2 bytes).
    Removing py32f072_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_Callback), (8 bytes).
    Removing py32f072_hal_uart.o(.text), (0 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_Init), (136 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Init), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_MspInit), (2 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing py32f072_hal_uart.o(.text.UART_SetConfig), (208 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.UART_SetConfig), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_HalfDuplex_Init), (100 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_Init), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_LIN_Init), (130 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_LIN_Init), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_MultiProcessor_Init), (134 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_Init), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_DeInit), (50 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_MspDeInit), (2 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_Transmit), (316 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_Receive), (272 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_Transmit_IT), (66 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_Receive_IT), (96 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_Transmit_DMA), (120 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA), (8 bytes).
    Removing py32f072_hal_uart.o(.text.UART_DMATransmitCplt), (44 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.UART_DMATransmitCplt), (8 bytes).
    Removing py32f072_hal_uart.o(.text.UART_DMATxHalfCplt), (10 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.UART_DMATxHalfCplt), (8 bytes).
    Removing py32f072_hal_uart.o(.text.UART_DMAError), (96 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.UART_DMAError), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_Receive_DMA), (164 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA), (8 bytes).
    Removing py32f072_hal_uart.o(.text.UART_DMAReceiveCplt), (56 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.UART_DMAReceiveCplt), (8 bytes).
    Removing py32f072_hal_uart.o(.text.UART_DMARxHalfCplt), (10 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.UART_DMARxHalfCplt), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_DMAPause), (84 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_DMAResume), (94 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_DMAStop), (116 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_Abort), (138 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_AbortTransmit), (76 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_AbortReceive), (86 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_Abort_IT), (184 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_Abort_IT), (8 bytes).
    Removing py32f072_hal_uart.o(.text.UART_DMATxAbortCallback), (46 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.UART_DMATxAbortCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.UART_DMARxAbortCallback), (46 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.UART_DMARxAbortCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_AbortCpltCallback), (2 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortCpltCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_AbortTransmit_IT), (100 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmit_IT), (8 bytes).
    Removing py32f072_hal_uart.o(.text.UART_DMATxOnlyAbortCallback), (20 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.UART_DMATxOnlyAbortCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_AbortTransmitCpltCallback), (2 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortTransmitCpltCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_AbortReceive_IT), (112 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceive_IT), (8 bytes).
    Removing py32f072_hal_uart.o(.text.UART_DMARxOnlyAbortCallback), (20 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.UART_DMARxOnlyAbortCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_AbortReceiveCpltCallback), (2 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_AbortReceiveCpltCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_IRQHandler), (732 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler), (8 bytes).
    Removing py32f072_hal_uart.o(.text.UART_DMAAbortOnError), (16 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.UART_DMAAbortOnError), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_ErrorCallback), (2 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_IdleFrameDetectCpltCallback), (2 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_IdleFrameDetectCpltCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_TxCpltCallback), (2 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback), (2 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_TxHalfCpltCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_RxCpltCallback), (2 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback), (2 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_RxHalfCpltCallback), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_LIN_SendBreak), (40 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_LIN_SendBreak), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_MultiProcessor_EnterMuteMode), (40 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_EnterMuteMode), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_MultiProcessor_ExitMuteMode), (40 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_MultiProcessor_ExitMuteMode), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_HalfDuplex_EnableTransmitter), (44 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableTransmitter), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_HalfDuplex_EnableReceiver), (44 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_HalfDuplex_EnableReceiver), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_GetState), (14 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_GetState), (8 bytes).
    Removing py32f072_hal_uart.o(.text.HAL_UART_GetError), (4 bytes).
    Removing py32f072_hal_uart.o(.ARM.exidx.text.HAL_UART_GetError), (8 bytes).
    Removing usbd_core.o(.text), (0 bytes).
    Removing usbd_core.o(.text.usbd_event_connect_handler), (36 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_event_connect_handler), (8 bytes).
    Removing usbd_core.o(.text.usbd_event_disconnect_handler), (36 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_event_disconnect_handler), (8 bytes).
    Removing usbd_core.o(.text.usbd_event_resume_handler), (36 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_event_resume_handler), (8 bytes).
    Removing usbd_core.o(.text.usbd_event_suspend_handler), (36 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_event_suspend_handler), (8 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_event_reset_handler), (8 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_event_ep0_setup_complete_handler), (8 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_setup_request_handler), (8 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_event_ep_in_complete_handler), (8 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_event_ep_out_complete_handler), (8 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_desc_register), (8 bytes).
    Removing usbd_core.o(.text.usbd_msosv1_desc_register), (12 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_msosv1_desc_register), (8 bytes).
    Removing usbd_core.o(.text.usbd_msosv2_desc_register), (12 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_msosv2_desc_register), (8 bytes).
    Removing usbd_core.o(.text.usbd_bos_desc_register), (12 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_bos_desc_register), (8 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_add_interface), (8 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_add_endpoint), (8 bytes).
    Removing usbd_core.o(.text.usb_device_is_configured), (16 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usb_device_is_configured), (8 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_initialize), (8 bytes).
    Removing usbd_core.o(.text.usbd_deinitialize), (32 bytes).
    Removing usbd_core.o(.ARM.exidx.text.usbd_deinitialize), (8 bytes).
    Removing usb_dc_py32.o(.text), (0 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.usb_dc_low_level_init), (8 bytes).
    Removing usb_dc_py32.o(.text.usb_dc_low_level_deinit), (2 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.usb_dc_low_level_deinit), (8 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.usb_dc_init), (8 bytes).
    Removing usb_dc_py32.o(.text.usb_dc_deinit), (4 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.usb_dc_deinit), (8 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.usbd_set_address), (8 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.usbd_ep_open), (8 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.usbd_ep_close), (8 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.usbd_ep_set_stall), (8 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.usbd_ep_clear_stall), (8 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.usbd_ep_is_stalled), (8 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.usbd_ep_start_write), (8 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.usbd_ep_start_read), (8 bytes).
    Removing usb_dc_py32.o(.ARM.exidx.text.USBD_IRQHandler), (8 bytes).
    Removing usb_dc_py32.o(.bss.zlp_flag), (1 bytes).
    Removing usbd_cdc.o(.text), (0 bytes).
    Removing usbd_cdc.o(.ARM.exidx.text.usbd_cdc_acm_init_intf), (8 bytes).
    Removing usbd_cdc.o(.ARM.exidx.text.cdc_acm_class_interface_request_handler), (8 bytes).
    Removing usbd_cdc.o(.ARM.exidx.text.cdc_notify_handler), (8 bytes).
    Removing usbd_cdc.o(.ARM.exidx.text.usbd_cdc_acm_set_line_coding), (8 bytes).
    Removing usbd_cdc.o(.ARM.exidx.text.usbd_cdc_acm_get_line_coding), (8 bytes).
    Removing usbd_cdc.o(.text.usbd_cdc_acm_set_dtr), (2 bytes).
    Removing usbd_cdc.o(.ARM.exidx.text.usbd_cdc_acm_set_dtr), (8 bytes).
    Removing usbd_cdc.o(.ARM.exidx.text.usbd_cdc_acm_set_rts), (8 bytes).
    Removing usbd_cdc.o(.rodata.str1.1), (18 bytes).
    Removing usbd_cdc.o(.data.stop_name), (12 bytes).
    Removing usbd_cdc.o(.data.parity_name), (20 bytes).

413 unused section(s) (total 13414 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    py32f072_hal.c                           0x00000000   Number         0  py32f072_hal.o ABSOLUTE
    py32f072_hal_cortex.c                    0x00000000   Number         0  py32f072_hal_cortex.o ABSOLUTE
    py32f072_hal_dma.c                       0x00000000   Number         0  py32f072_hal_dma.o ABSOLUTE
    py32f072_hal_gpio.c                      0x00000000   Number         0  py32f072_hal_gpio.o ABSOLUTE
    py32f072_hal_msp.c                       0x00000000   Number         0  py32f072_hal_msp.o ABSOLUTE
    py32f072_hal_pwr.c                       0x00000000   Number         0  py32f072_hal_pwr.o ABSOLUTE
    py32f072_hal_rcc.c                       0x00000000   Number         0  py32f072_hal_rcc.o ABSOLUTE
    py32f072_hal_rcc_ex.c                    0x00000000   Number         0  py32f072_hal_rcc_ex.o ABSOLUTE
    py32f072_hal_uart.c                      0x00000000   Number         0  py32f072_hal_uart.o ABSOLUTE
    py32f072_it.c                            0x00000000   Number         0  py32f072_it.o ABSOLUTE
    py32f072xx_Start_Kit.c                   0x00000000   Number         0  py32f072xx_start_kit.o ABSOLUTE
    startup_py32f072xx.s                     0x00000000   Number         0  startup_py32f072xx.o ABSOLUTE
    system_py32f072.c                        0x00000000   Number         0  system_py32f072.o ABSOLUTE
    usb_dc_py32.c                            0x00000000   Number         0  usb_dc_py32.o ABSOLUTE
    usbd_cdc.c                               0x00000000   Number         0  usbd_cdc.o ABSOLUTE
    usbd_cdc_if.c                            0x00000000   Number         0  usbd_cdc_if.o ABSOLUTE
    usbd_core.c                              0x00000000   Number         0  usbd_core.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_py32f072xx.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x080000d4   Section       28  startup_py32f072xx.o(.text)
    .text                                    0x080000f0   Section        0  memcpya.o(.text)
    .text                                    0x08000114   Section        0  memseta.o(.text)
    .text                                    0x08000138   Section        0  uidiv_div0.o(.text)
    .text                                    0x08000178   Section       36  init.o(.text)
    .text                                    0x0800019c   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x080001d8   Section        0  py32f072_hal.o(.text.HAL_Delay)
    [Anonymous Symbol]                       0x080001f8   Section        0  py32f072_hal.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x08000200   Section        0  py32f072_hal.o(.text.HAL_IncTick)
    __arm_cp.5_1                             0x08000210   Number         4  py32f072_hal.o(.text.HAL_IncTick)
    [Anonymous Symbol]                       0x08000214   Section        0  py32f072_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x0800022c   Section        0  py32f072_hal.o(.text.HAL_InitTick)
    __arm_cp.1_0                             0x0800026c   Number         4  py32f072_hal.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08000270   Section        0  py32f072_hal_msp.o(.text.HAL_MspInit)
    __arm_cp.0_0                             0x08000298   Number         4  py32f072_hal_msp.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x0800029c   Section        0  py32f072_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    __arm_cp.0_0                             0x080002cc   Number         4  py32f072_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    __arm_cp.0_1                             0x080002d0   Number         4  py32f072_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x080002d4   Section        0  py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.3_0                             0x08000440   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.3_1                             0x08000444   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.3_3                             0x08000448   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.3_4                             0x0800044c   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    __arm_cp.3_5                             0x08000450   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x08000454   Section        0  py32f072_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    __arm_cp.2_0                             0x080004ec   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    __arm_cp.2_1                             0x080004f0   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    __arm_cp.2_3                             0x08000504   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    __arm_cp.2_4                             0x08000508   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    [Anonymous Symbol]                       0x0800050c   Section        0  py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_0                             0x08000968   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_1                             0x0800096c   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_2                             0x08000970   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_3                             0x08000974   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_4                             0x08000978   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_5                             0x0800097c   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_6                             0x08000980   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig)
    __arm_cp.1_8                             0x0800098c   Number         4  py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x08000990   Section        0  py32f072_hal_cortex.o(.text.HAL_SYSTICK_Config)
    __arm_cp.4_0                             0x080009b8   Number         4  py32f072_hal_cortex.o(.text.HAL_SYSTICK_Config)
    __arm_cp.4_1                             0x080009bc   Number         4  py32f072_hal_cortex.o(.text.HAL_SYSTICK_Config)
    __arm_cp.4_2                             0x080009c0   Number         4  py32f072_hal_cortex.o(.text.HAL_SYSTICK_Config)
    [Anonymous Symbol]                       0x080009c4   Section        0  py32f072_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x080009c6   Section        0  py32f072_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x080009c8   Section        0  py32f072_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080009ca   Section        0  py32f072_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x080009cc   Section        0  py32f072_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080009d4   Section        0  system_py32f072.o(.text.SystemInit)
    __arm_cp.1_0                             0x080009fc   Number         4  system_py32f072.o(.text.SystemInit)
    __arm_cp.1_1                             0x08000a00   Number         4  system_py32f072.o(.text.SystemInit)
    __arm_cp.1_2                             0x08000a04   Number         4  system_py32f072.o(.text.SystemInit)
    __arm_cp.1_3                             0x08000a08   Number         4  system_py32f072.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000a0c   Section        0  usb_dc_py32.o(.text.USBD_IRQHandler)
    __arm_cp.12_0                            0x08000cdc   Number         4  usb_dc_py32.o(.text.USBD_IRQHandler)
    __arm_cp.12_1                            0x08000ce0   Number         4  usb_dc_py32.o(.text.USBD_IRQHandler)
    __arm_cp.12_2                            0x08000ce4   Number         4  usb_dc_py32.o(.text.USBD_IRQHandler)
    __arm_cp.12_3                            0x08000ce8   Number         4  usb_dc_py32.o(.text.USBD_IRQHandler)
    [Anonymous Symbol]                       0x08000cec   Section        0  py32f072_it.o(.text.USB_IRQHandler)
    cdc_acm_class_interface_request_handler  0x08000cf5   Thumb Code   128  usbd_cdc.o(.text.cdc_acm_class_interface_request_handler)
    [Anonymous Symbol]                       0x08000cf4   Section        0  usbd_cdc.o(.text.cdc_acm_class_interface_request_handler)
    [Anonymous Symbol]                       0x08000d74   Section        0  usbd_cdc_if.o(.text.cdc_acm_data_send_with_dtr_test)
    __arm_cp.5_1                             0x08000da4   Number         4  usbd_cdc_if.o(.text.cdc_acm_data_send_with_dtr_test)
    [Anonymous Symbol]                       0x08000da8   Section        0  usbd_cdc_if.o(.text.cdc_acm_init)
    __arm_cp.3_0                             0x08000dd8   Number         4  usbd_cdc_if.o(.text.cdc_acm_init)
    __arm_cp.3_1                             0x08000ddc   Number         4  usbd_cdc_if.o(.text.cdc_acm_init)
    __arm_cp.3_2                             0x08000de0   Number         4  usbd_cdc_if.o(.text.cdc_acm_init)
    __arm_cp.3_3                             0x08000de4   Number         4  usbd_cdc_if.o(.text.cdc_acm_init)
    __arm_cp.3_4                             0x08000de8   Number         4  usbd_cdc_if.o(.text.cdc_acm_init)
    cdc_notify_handler                       0x08000ded   Thumb Code     2  usbd_cdc.o(.text.cdc_notify_handler)
    [Anonymous Symbol]                       0x08000dec   Section        0  usbd_cdc.o(.text.cdc_notify_handler)
    [Anonymous Symbol]                       0x08000df0   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x08000e94   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x08000e98   Number         4  main.o(.text.main)
    __arm_cp.0_2                             0x08000e9c   Number         4  main.o(.text.main)
    __arm_cp.0_3                             0x08000ea0   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x08000ea4   Section        0  usb_dc_py32.o(.text.usb_dc_init)
    __arm_cp.2_0                             0x08000ec0   Number         4  usb_dc_py32.o(.text.usb_dc_init)
    [Anonymous Symbol]                       0x08000ec4   Section        0  usb_dc_py32.o(.text.usb_dc_low_level_init)
    [Anonymous Symbol]                       0x08000ec8   Section        0  usbd_core.o(.text.usbd_add_endpoint)
    [Anonymous Symbol]                       0x08000eec   Section        0  usbd_core.o(.text.usbd_add_interface)
    __arm_cp.13_1                            0x08000f10   Number         4  usbd_core.o(.text.usbd_add_interface)
    [Anonymous Symbol]                       0x08000f14   Section        0  usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_in)
    __arm_cp.2_0                             0x08000f34   Number         4  usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_in)
    [Anonymous Symbol]                       0x08000f38   Section        0  usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_out)
    [Anonymous Symbol]                       0x08000f48   Section        0  usbd_cdc.o(.text.usbd_cdc_acm_get_line_coding)
    [Anonymous Symbol]                       0x08000f64   Section        0  usbd_cdc.o(.text.usbd_cdc_acm_init_intf)
    __arm_cp.0_0                             0x08000f74   Number         4  usbd_cdc.o(.text.usbd_cdc_acm_init_intf)
    __arm_cp.0_1                             0x08000f78   Number         4  usbd_cdc.o(.text.usbd_cdc_acm_init_intf)
    [Anonymous Symbol]                       0x08000f7c   Section        0  usbd_cdc_if.o(.text.usbd_cdc_acm_set_dtr)
    __arm_cp.4_0                             0x08000f84   Number         4  usbd_cdc_if.o(.text.usbd_cdc_acm_set_dtr)
    [Anonymous Symbol]                       0x08000f88   Section        0  usbd_cdc.o(.text.usbd_cdc_acm_set_line_coding)
    [Anonymous Symbol]                       0x08000f8a   Section        0  usbd_cdc.o(.text.usbd_cdc_acm_set_rts)
    [Anonymous Symbol]                       0x08000f8c   Section        0  usbd_cdc_if.o(.text.usbd_configure_done_callback)
    __arm_cp.0_0                             0x08000f9c   Number         4  usbd_cdc_if.o(.text.usbd_configure_done_callback)
    [Anonymous Symbol]                       0x08000fa0   Section        0  usbd_core.o(.text.usbd_desc_register)
    __arm_cp.9_0                             0x08000fb0   Number         4  usbd_core.o(.text.usbd_desc_register)
    [Anonymous Symbol]                       0x08000fb4   Section        0  usb_dc_py32.o(.text.usbd_ep_clear_stall)
    __arm_cp.8_0                             0x0800100c   Number         4  usb_dc_py32.o(.text.usbd_ep_clear_stall)
    [Anonymous Symbol]                       0x08001010   Section        0  usb_dc_py32.o(.text.usbd_ep_close)
    [Anonymous Symbol]                       0x08001014   Section        0  usb_dc_py32.o(.text.usbd_ep_is_stalled)
    [Anonymous Symbol]                       0x08001050   Section        0  usb_dc_py32.o(.text.usbd_ep_open)
    [Anonymous Symbol]                       0x08001148   Section        0  usb_dc_py32.o(.text.usbd_ep_set_stall)
    [Anonymous Symbol]                       0x0800119c   Section        0  usb_dc_py32.o(.text.usbd_ep_start_read)
    __arm_cp.11_1                            0x080011fc   Number         4  usb_dc_py32.o(.text.usbd_ep_start_read)
    [Anonymous Symbol]                       0x08001200   Section        0  usb_dc_py32.o(.text.usbd_ep_start_write)
    __arm_cp.10_0                            0x080012dc   Number         4  usb_dc_py32.o(.text.usbd_ep_start_write)
    __arm_cp.10_1                            0x080012e0   Number         4  usb_dc_py32.o(.text.usbd_ep_start_write)
    __arm_cp.10_2                            0x080012e4   Number         4  usb_dc_py32.o(.text.usbd_ep_start_write)
    [Anonymous Symbol]                       0x080012e8   Section        0  usbd_core.o(.text.usbd_event_ep0_setup_complete_handler)
    [Anonymous Symbol]                       0x0800139c   Section        0  usbd_core.o(.text.usbd_event_ep_in_complete_handler)
    [Anonymous Symbol]                       0x08001400   Section        0  usbd_core.o(.text.usbd_event_ep_out_complete_handler)
    [Anonymous Symbol]                       0x0800145c   Section        0  usbd_core.o(.text.usbd_event_reset_handler)
    __arm_cp.4_1                             0x080014a4   Number         4  usbd_core.o(.text.usbd_event_reset_handler)
    __arm_cp.4_2                             0x080014a8   Number         4  usbd_core.o(.text.usbd_event_reset_handler)
    [Anonymous Symbol]                       0x080014ac   Section        0  usbd_core.o(.text.usbd_initialize)
    [Anonymous Symbol]                       0x080014b4   Section        0  usb_dc_py32.o(.text.usbd_set_address)
    __arm_cp.4_0                             0x080014c8   Number         4  usb_dc_py32.o(.text.usbd_set_address)
    __arm_cp.4_1                             0x080014cc   Number         4  usb_dc_py32.o(.text.usbd_set_address)
    usbd_setup_request_handler               0x080014d1   Thumb Code  1212  usbd_core.o(.text.usbd_setup_request_handler)
    [Anonymous Symbol]                       0x080014d0   Section        0  usbd_core.o(.text.usbd_setup_request_handler)
    __arm_cp.6_8                             0x080016c0   Number         4  usbd_core.o(.text.usbd_setup_request_handler)
    __arm_cp.6_1                             0x0800198c   Number         4  usbd_core.o(.text.usbd_setup_request_handler)
    __arm_cp.6_2                             0x08001990   Number         4  usbd_core.o(.text.usbd_setup_request_handler)
    __arm_cp.6_3                             0x08001994   Number         4  usbd_core.o(.text.usbd_setup_request_handler)
    __arm_cp.6_4                             0x08001998   Number         4  usbd_core.o(.text.usbd_setup_request_handler)
    __arm_cp.6_5                             0x0800199c   Number         4  usbd_core.o(.text.usbd_setup_request_handler)
    i.__scatterload_copy                     0x080019a0   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x080019ae   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x080019b0   Section       14  handlers.o(i.__scatterload_zeroinit)
    [Anonymous Symbol]                       0x080019c0   Section        0  py32f072_hal_rcc.o(.rodata..L__const.HAL_RCC_GetSysClockFreq.hsiValue)
    cdc_descriptor                           0x08001a34   Data         158  usbd_cdc_if.o(.rodata.cdc_descriptor)
    [Anonymous Symbol]                       0x08001a34   Section        0  usbd_cdc_if.o(.rodata.cdc_descriptor)
    bos_desc                                 0x20000200   Data           4  usbd_core.o(.bss.bos_desc)
    [Anonymous Symbol]                       0x20000200   Section        0  usbd_core.o(.bss.bos_desc)
    msosv1_desc                              0x200003e0   Data           4  usbd_core.o(.bss.msosv1_desc)
    [Anonymous Symbol]                       0x200003e0   Section        0  usbd_core.o(.bss.msosv1_desc)
    msosv2_desc                              0x200003e4   Data           4  usbd_core.o(.bss.msosv2_desc)
    [Anonymous Symbol]                       0x200003e4   Section        0  usbd_core.o(.bss.msosv2_desc)
    usb_ep0_state                            0x20000468   Data           1  usb_dc_py32.o(.bss.usb_ep0_state)
    [Anonymous Symbol]                       0x20000468   Section        0  usb_dc_py32.o(.bss.usb_ep0_state)
    STACK                                    0x20000478   Section      512  startup_py32f072xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_py32f072xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_py32f072xx.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_py32f072xx.o(RESET)
    __main                                   0x080000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080000d5   Thumb Code     8  startup_py32f072xx.o(.text)
    ADC_COMP_IRQHandler                      0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    CAN_IRQHandler                           0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    DMA1_Channel1_IRQHandler                 0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    DMA1_Channel2_3_IRQHandler               0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    DMA1_Channel4_5_6_7_IRQHandler           0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    EXTI0_1_IRQHandler                       0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    EXTI2_3_IRQHandler                       0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    EXTI4_15_IRQHandler                      0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    FLASH_IRQHandler                         0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    I2C1_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    I2C2_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    LCD_IRQHandler                           0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    PVD_IRQHandler                           0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    RCC_IRQHandler                           0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    RTC_IRQHandler                           0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    SPI1_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    SPI2_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    TIM14_IRQHandler                         0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    TIM15_IRQHandler                         0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    TIM16_IRQHandler                         0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    TIM17_IRQHandler                         0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    TIM1_CC_IRQHandler                       0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    TIM2_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    TIM3_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    TIM6_LPTIM1_DAC_IRQHandler               0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    TIM7_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    USART1_IRQHandler                        0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    USART2_IRQHandler                        0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    USART3_4_IRQHandler                      0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    WWDG_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32f072xx.o(.text)
    __aeabi_memcpy                           0x080000f1   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x080000f1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x080000f1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x08000115   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x08000115   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x08000115   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x08000123   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x08000123   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x08000123   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x08000127   Thumb Code    18  memseta.o(.text)
    __aeabi_uidiv                            0x08000139   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x08000139   Thumb Code    62  uidiv_div0.o(.text)
    __scatterload                            0x08000179   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000179   Thumb Code     0  init.o(.text)
    __decompress                             0x0800019d   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x0800019d   Thumb Code    58  __dczerorl.o(.text)
    HAL_Delay                                0x080001d9   Thumb Code    32  py32f072_hal.o(.text.HAL_Delay)
    HAL_GetTick                              0x080001f9   Thumb Code     8  py32f072_hal.o(.text.HAL_GetTick)
    HAL_IncTick                              0x08000201   Thumb Code    16  py32f072_hal.o(.text.HAL_IncTick)
    HAL_Init                                 0x08000215   Thumb Code    24  py32f072_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x0800022d   Thumb Code    64  py32f072_hal.o(.text.HAL_InitTick)
    HAL_MspInit                              0x08000271   Thumb Code    40  py32f072_hal_msp.o(.text.HAL_MspInit)
    HAL_NVIC_SetPriority                     0x0800029d   Thumb Code    48  py32f072_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_RCC_ClockConfig                      0x080002d5   Thumb Code   364  py32f072_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_GetSysClockFreq                  0x08000455   Thumb Code   152  py32f072_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    HAL_RCC_OscConfig                        0x0800050d   Thumb Code  1116  py32f072_hal_rcc.o(.text.HAL_RCC_OscConfig)
    HAL_SYSTICK_Config                       0x08000991   Thumb Code    40  py32f072_hal_cortex.o(.text.HAL_SYSTICK_Config)
    HardFault_Handler                        0x080009c5   Thumb Code     2  py32f072_it.o(.text.HardFault_Handler)
    NMI_Handler                              0x080009c7   Thumb Code     2  py32f072_it.o(.text.NMI_Handler)
    PendSV_Handler                           0x080009c9   Thumb Code     2  py32f072_it.o(.text.PendSV_Handler)
    SVC_Handler                              0x080009cb   Thumb Code     2  py32f072_it.o(.text.SVC_Handler)
    SysTick_Handler                          0x080009cd   Thumb Code     8  py32f072_it.o(.text.SysTick_Handler)
    SystemInit                               0x080009d5   Thumb Code    40  system_py32f072.o(.text.SystemInit)
    USBD_IRQHandler                          0x08000a0d   Thumb Code   720  usb_dc_py32.o(.text.USBD_IRQHandler)
    USB_IRQHandler                           0x08000ced   Thumb Code     8  py32f072_it.o(.text.USB_IRQHandler)
    cdc_acm_data_send_with_dtr_test          0x08000d75   Thumb Code    48  usbd_cdc_if.o(.text.cdc_acm_data_send_with_dtr_test)
    cdc_acm_init                             0x08000da9   Thumb Code    48  usbd_cdc_if.o(.text.cdc_acm_init)
    main                                     0x08000df1   Thumb Code   164  main.o(.text.main)
    usb_dc_init                              0x08000ea5   Thumb Code    28  usb_dc_py32.o(.text.usb_dc_init)
    usb_dc_low_level_init                    0x08000ec5   Thumb Code     2  usb_dc_py32.o(.text.usb_dc_low_level_init)
    usbd_add_endpoint                        0x08000ec9   Thumb Code    36  usbd_core.o(.text.usbd_add_endpoint)
    usbd_add_interface                       0x08000eed   Thumb Code    36  usbd_core.o(.text.usbd_add_interface)
    usbd_cdc_acm_bulk_in                     0x08000f15   Thumb Code    32  usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_in)
    usbd_cdc_acm_bulk_out                    0x08000f39   Thumb Code    16  usbd_cdc_if.o(.text.usbd_cdc_acm_bulk_out)
    usbd_cdc_acm_get_line_coding             0x08000f49   Thumb Code    26  usbd_cdc.o(.text.usbd_cdc_acm_get_line_coding)
    usbd_cdc_acm_init_intf                   0x08000f65   Thumb Code    16  usbd_cdc.o(.text.usbd_cdc_acm_init_intf)
    usbd_cdc_acm_set_dtr                     0x08000f7d   Thumb Code     8  usbd_cdc_if.o(.text.usbd_cdc_acm_set_dtr)
    usbd_cdc_acm_set_line_coding             0x08000f89   Thumb Code     2  usbd_cdc.o(.text.usbd_cdc_acm_set_line_coding)
    usbd_cdc_acm_set_rts                     0x08000f8b   Thumb Code     2  usbd_cdc.o(.text.usbd_cdc_acm_set_rts)
    usbd_configure_done_callback             0x08000f8d   Thumb Code    16  usbd_cdc_if.o(.text.usbd_configure_done_callback)
    usbd_desc_register                       0x08000fa1   Thumb Code    16  usbd_core.o(.text.usbd_desc_register)
    usbd_ep_clear_stall                      0x08000fb5   Thumb Code    88  usb_dc_py32.o(.text.usbd_ep_clear_stall)
    usbd_ep_close                            0x08001011   Thumb Code     4  usb_dc_py32.o(.text.usbd_ep_close)
    usbd_ep_is_stalled                       0x08001015   Thumb Code    60  usb_dc_py32.o(.text.usbd_ep_is_stalled)
    usbd_ep_open                             0x08001051   Thumb Code   248  usb_dc_py32.o(.text.usbd_ep_open)
    usbd_ep_set_stall                        0x08001149   Thumb Code    84  usb_dc_py32.o(.text.usbd_ep_set_stall)
    usbd_ep_start_read                       0x0800119d   Thumb Code    96  usb_dc_py32.o(.text.usbd_ep_start_read)
    usbd_ep_start_write                      0x08001201   Thumb Code   220  usb_dc_py32.o(.text.usbd_ep_start_write)
    usbd_event_ep0_setup_complete_handler    0x080012e9   Thumb Code   180  usbd_core.o(.text.usbd_event_ep0_setup_complete_handler)
    usbd_event_ep_in_complete_handler        0x0800139d   Thumb Code   100  usbd_core.o(.text.usbd_event_ep_in_complete_handler)
    usbd_event_ep_out_complete_handler       0x08001401   Thumb Code    92  usbd_core.o(.text.usbd_event_ep_out_complete_handler)
    usbd_event_reset_handler                 0x0800145d   Thumb Code    72  usbd_core.o(.text.usbd_event_reset_handler)
    usbd_initialize                          0x080014ad   Thumb Code     8  usbd_core.o(.text.usbd_initialize)
    usbd_set_address                         0x080014b5   Thumb Code    20  usb_dc_py32.o(.text.usbd_set_address)
    __scatterload_copy                       0x080019a1   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x080019af   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x080019b1   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    AHBPrescTable                            0x080019d4   Data          64  system_py32f072.o(.rodata.AHBPrescTable)
    HSIFreqTable                             0x08001a14   Data          32  system_py32f072.o(.rodata.HSIFreqTable)
    Region$$Table$$Base                      0x08001ad4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08001af4   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_py32f072.o(.data.SystemCoreClock)
    cdc_in_ep                                0x20000004   Data           8  usbd_cdc_if.o(.data.cdc_in_ep)
    cdc_out_ep                               0x2000000c   Data           8  usbd_cdc_if.o(.data.cdc_out_ep)
    uwTickFreq                               0x20000014   Data           4  py32f072_hal.o(.data.uwTickFreq)
    uwTickPrio                               0x20000018   Data           4  py32f072_hal.o(.data.uwTickPrio)
    write_buffer                             0x2000001c   Data         128  usbd_cdc_if.o(.data.write_buffer)
    usbd_core_cfg                            0x2000009c   Data         352  usbd_core.o(.noncacheable)
    dtr_enable                               0x20000204   Data           1  usbd_cdc_if.o(.bss.dtr_enable)
    ep_tx_busy_flag                          0x20000205   Data           1  usbd_cdc_if.o(.bss.ep_tx_busy_flag)
    g_pyusb_udc                              0x20000220   Data         384  usb_dc_py32.o(.bss.g_pyusb_udc)
    intf0                                    0x200003a0   Data          32  usbd_cdc_if.o(.bss.intf0)
    intf1                                    0x200003c0   Data          32  usbd_cdc_if.o(.bss.intf1)
    read_buffer                              0x200003e8   Data         128  usbd_cdc_if.o(.bss.read_buffer)
    usbd_intf_head                           0x2000046c   Data           4  usbd_core.o(.bss.usbd_intf_head)
    uwTick                                   0x20000470   Data           4  py32f072_hal.o(.bss.uwTick)
    __initial_sp                             0x20000678   Data           0  startup_py32f072xx.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00001d00, Max: 0x00020000, ABSOLUTE, COMPRESSED[0x00001b40])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00001af4, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO            3    RESET               startup_py32f072xx.o
    0x080000c0   0x080000c0   0x00000000   Code   RO          611  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x080000c0   0x080000c0   0x00000004   Code   RO          626    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x080000c4   0x080000c4   0x00000004   Code   RO          629    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO          631    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO          633    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x080000c8   0x080000c8   0x00000008   Code   RO          634    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO          636    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO          638    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x080000d0   0x080000d0   0x00000004   Code   RO          627    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x080000d4   0x080000d4   0x0000001c   Code   RO            4    .text               startup_py32f072xx.o
    0x080000f0   0x080000f0   0x00000024   Code   RO          620    .text               mc_p.l(memcpya.o)
    0x08000114   0x08000114   0x00000024   Code   RO          622    .text               mc_p.l(memseta.o)
    0x08000138   0x08000138   0x0000003e   Code   RO          644    .text               mc_p.l(uidiv_div0.o)
    0x08000176   0x08000176   0x00000002   PAD
    0x08000178   0x08000178   0x00000024   Code   RO          650    .text               mc_p.l(init.o)
    0x0800019c   0x0800019c   0x0000003a   Code   RO          660    .text               mc_p.l(__dczerorl.o)
    0x080001d6   0x080001d6   0x00000002   PAD
    0x080001d8   0x080001d8   0x00000020   Code   RO          155    .text.HAL_Delay     py32f072_hal.o
    0x080001f8   0x080001f8   0x00000008   Code   RO          147    .text.HAL_GetTick   py32f072_hal.o
    0x08000200   0x08000200   0x00000014   Code   RO          145    .text.HAL_IncTick   py32f072_hal.o
    0x08000214   0x08000214   0x00000018   Code   RO          135    .text.HAL_Init      py32f072_hal.o
    0x0800022c   0x0800022c   0x00000044   Code   RO          137    .text.HAL_InitTick  py32f072_hal.o
    0x08000270   0x08000270   0x0000002c   Code   RO           39    .text.HAL_MspInit   py32f072_hal_msp.o
    0x0800029c   0x0800029c   0x00000038   Code   RO          240    .text.HAL_NVIC_SetPriority  py32f072_hal_cortex.o
    0x080002d4   0x080002d4   0x00000180   Code   RO          302    .text.HAL_RCC_ClockConfig  py32f072_hal_rcc.o
    0x08000454   0x08000454   0x000000b8   Code   RO          300    .text.HAL_RCC_GetSysClockFreq  py32f072_hal_rcc.o
    0x0800050c   0x0800050c   0x00000484   Code   RO          298    .text.HAL_RCC_OscConfig  py32f072_hal_rcc.o
    0x08000990   0x08000990   0x00000034   Code   RO          248    .text.HAL_SYSTICK_Config  py32f072_hal_cortex.o
    0x080009c4   0x080009c4   0x00000002   Code   RO           49    .text.HardFault_Handler  py32f072_it.o
    0x080009c6   0x080009c6   0x00000002   Code   RO           47    .text.NMI_Handler   py32f072_it.o
    0x080009c8   0x080009c8   0x00000002   Code   RO           53    .text.PendSV_Handler  py32f072_it.o
    0x080009ca   0x080009ca   0x00000002   Code   RO           51    .text.SVC_Handler   py32f072_it.o
    0x080009cc   0x080009cc   0x00000008   Code   RO           55    .text.SysTick_Handler  py32f072_it.o
    0x080009d4   0x080009d4   0x00000038   Code   RO           13    .text.SystemInit    system_py32f072.o
    0x08000a0c   0x08000a0c   0x000002e0   Code   RO          574    .text.USBD_IRQHandler  usb_dc_py32.o
    0x08000cec   0x08000cec   0x00000008   Code   RO           57    .text.USB_IRQHandler  py32f072_it.o
    0x08000cf4   0x08000cf4   0x00000080   Code   RO          589    .text.cdc_acm_class_interface_request_handler  usbd_cdc.o
    0x08000d74   0x08000d74   0x00000034   Code   RO           76    .text.cdc_acm_data_send_with_dtr_test  usbd_cdc_if.o
    0x08000da8   0x08000da8   0x00000044   Code   RO           72    .text.cdc_acm_init  usbd_cdc_if.o
    0x08000dec   0x08000dec   0x00000002   Code   RO          591    .text.cdc_notify_handler  usbd_cdc.o
    0x08000dee   0x08000dee   0x00000002   PAD
    0x08000df0   0x08000df0   0x000000b4   Code   RO           27    .text.main          main.o
    0x08000ea4   0x08000ea4   0x00000020   Code   RO          554    .text.usb_dc_init   usb_dc_py32.o
    0x08000ec4   0x08000ec4   0x00000002   Code   RO          550    .text.usb_dc_low_level_init  usb_dc_py32.o
    0x08000ec6   0x08000ec6   0x00000002   PAD
    0x08000ec8   0x08000ec8   0x00000024   Code   RO          529    .text.usbd_add_endpoint  usbd_core.o
    0x08000eec   0x08000eec   0x00000028   Code   RO          527    .text.usbd_add_interface  usbd_core.o
    0x08000f14   0x08000f14   0x00000024   Code   RO           70    .text.usbd_cdc_acm_bulk_in  usbd_cdc_if.o
    0x08000f38   0x08000f38   0x00000010   Code   RO           68    .text.usbd_cdc_acm_bulk_out  usbd_cdc_if.o
    0x08000f48   0x08000f48   0x0000001a   Code   RO          595    .text.usbd_cdc_acm_get_line_coding  usbd_cdc.o
    0x08000f62   0x08000f62   0x00000002   PAD
    0x08000f64   0x08000f64   0x00000018   Code   RO          587    .text.usbd_cdc_acm_init_intf  usbd_cdc.o
    0x08000f7c   0x08000f7c   0x0000000c   Code   RO           74    .text.usbd_cdc_acm_set_dtr  usbd_cdc_if.o
    0x08000f88   0x08000f88   0x00000002   Code   RO          593    .text.usbd_cdc_acm_set_line_coding  usbd_cdc.o
    0x08000f8a   0x08000f8a   0x00000002   Code   RO          599    .text.usbd_cdc_acm_set_rts  usbd_cdc.o
    0x08000f8c   0x08000f8c   0x00000014   Code   RO           66    .text.usbd_configure_done_callback  usbd_cdc_if.o
    0x08000fa0   0x08000fa0   0x00000014   Code   RO          519    .text.usbd_desc_register  usbd_core.o
    0x08000fb4   0x08000fb4   0x0000005c   Code   RO          566    .text.usbd_ep_clear_stall  usb_dc_py32.o
    0x08001010   0x08001010   0x00000004   Code   RO          562    .text.usbd_ep_close  usb_dc_py32.o
    0x08001014   0x08001014   0x0000003c   Code   RO          568    .text.usbd_ep_is_stalled  usb_dc_py32.o
    0x08001050   0x08001050   0x000000f8   Code   RO          560    .text.usbd_ep_open  usb_dc_py32.o
    0x08001148   0x08001148   0x00000054   Code   RO          564    .text.usbd_ep_set_stall  usb_dc_py32.o
    0x0800119c   0x0800119c   0x00000064   Code   RO          572    .text.usbd_ep_start_read  usb_dc_py32.o
    0x08001200   0x08001200   0x000000e8   Code   RO          570    .text.usbd_ep_start_write  usb_dc_py32.o
    0x080012e8   0x080012e8   0x000000b4   Code   RO          511    .text.usbd_event_ep0_setup_complete_handler  usbd_core.o
    0x0800139c   0x0800139c   0x00000064   Code   RO          515    .text.usbd_event_ep_in_complete_handler  usbd_core.o
    0x08001400   0x08001400   0x0000005c   Code   RO          517    .text.usbd_event_ep_out_complete_handler  usbd_core.o
    0x0800145c   0x0800145c   0x00000050   Code   RO          509    .text.usbd_event_reset_handler  usbd_core.o
    0x080014ac   0x080014ac   0x00000008   Code   RO          533    .text.usbd_initialize  usbd_core.o
    0x080014b4   0x080014b4   0x0000001c   Code   RO          558    .text.usbd_set_address  usb_dc_py32.o
    0x080014d0   0x080014d0   0x000004d0   Code   RO          513    .text.usbd_setup_request_handler  usbd_core.o
    0x080019a0   0x080019a0   0x0000000e   Code   RO          654    i.__scatterload_copy  mc_p.l(handlers.o)
    0x080019ae   0x080019ae   0x00000002   Code   RO          655    i.__scatterload_null  mc_p.l(handlers.o)
    0x080019b0   0x080019b0   0x0000000e   Code   RO          656    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x080019be   0x080019be   0x00000002   PAD
    0x080019c0   0x080019c0   0x00000014   Data   RO          326    .rodata..L__const.HAL_RCC_GetSysClockFreq.hsiValue  py32f072_hal_rcc.o
    0x080019d4   0x080019d4   0x00000040   Data   RO           16    .rodata.AHBPrescTable  system_py32f072.o
    0x08001a14   0x08001a14   0x00000020   Data   RO           18    .rodata.HSIFreqTable  system_py32f072.o
    0x08001a34   0x08001a34   0x0000009e   Data   RO           85    .rodata.cdc_descriptor  usbd_cdc_if.o
    0x08001ad2   0x08001ad2   0x00000002   PAD
    0x08001ad4   0x08001ad4   0x00000020   Data   RO          653    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08001b00, Size: 0x00000678, Max: 0x00004000, ABSOLUTE, COMPRESSED[0x00000040])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW           15    .data.SystemCoreClock  system_py32f072.o
    0x20000004   COMPRESSED   0x00000008   Data   RW           84    .data.cdc_in_ep     usbd_cdc_if.o
    0x2000000c   COMPRESSED   0x00000008   Data   RW           83    .data.cdc_out_ep    usbd_cdc_if.o
    0x20000014   COMPRESSED   0x00000004   Data   RW          196    .data.uwTickFreq    py32f072_hal.o
    0x20000018   COMPRESSED   0x00000004   Data   RW          195    .data.uwTickPrio    py32f072_hal.o
    0x2000001c   COMPRESSED   0x00000080   Data   RW           80    .data.write_buffer  usbd_cdc_if.o
    0x2000009c   COMPRESSED   0x00000160   Data   RW          538    .noncacheable       usbd_core.o
    0x200001fc   COMPRESSED   0x00000004   PAD
    0x20000200        -       0x00000004   Zero   RW          541    .bss.bos_desc       usbd_core.o
    0x20000204        -       0x00000001   Zero   RW           88    .bss.dtr_enable     usbd_cdc_if.o
    0x20000205        -       0x00000001   Zero   RW           81    .bss.ep_tx_busy_flag  usbd_cdc_if.o
    0x20000206   COMPRESSED   0x0000001a   PAD
    0x20000220        -       0x00000180   Zero   RW          577    .bss.g_pyusb_udc    usb_dc_py32.o
    0x200003a0        -       0x00000020   Zero   RW           86    .bss.intf0          usbd_cdc_if.o
    0x200003c0        -       0x00000020   Zero   RW           87    .bss.intf1          usbd_cdc_if.o
    0x200003e0        -       0x00000004   Zero   RW          539    .bss.msosv1_desc    usbd_core.o
    0x200003e4        -       0x00000004   Zero   RW          540    .bss.msosv2_desc    usbd_core.o
    0x200003e8        -       0x00000080   Zero   RW           82    .bss.read_buffer    usbd_cdc_if.o
    0x20000468        -       0x00000001   Zero   RW          578    .bss.usb_ep0_state  usb_dc_py32.o
    0x20000469   COMPRESSED   0x00000003   PAD
    0x2000046c        -       0x00000004   Zero   RW          537    .bss.usbd_intf_head  usbd_core.o
    0x20000470        -       0x00000004   Zero   RW          197    .bss.uwTick         py32f072_hal.o
    0x20000474   COMPRESSED   0x00000004   PAD
    0x20000478        -       0x00000200   Zero   RW            1    STACK               startup_py32f072xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       180         16          0          0          0       3832   main.o
       152          8          0          8          4       7246   py32f072_hal.o
       108         20          0          0          0       5571   py32f072_hal_cortex.o
        44          4          0          0          0       1346   py32f072_hal_msp.o
      1724        116         20          0          0       8996   py32f072_hal_rcc.o
        24          0          0          0          0        876   py32f072_it.o
        28          8        192          0        512        708   startup_py32f072xx.o
        56         16         96          4          0       2315   system_py32f072.o
      1618         76          0          0        385      10150   usb_dc_py32.o
       184          8          0          0          0       3616   usbd_cdc.o
       204         36        158        144        194       2980   usbd_cdc_if.o
      1788         92          0        352         16      13329   usbd_core.o

    ----------------------------------------------------------------------
      6116        400        500        508       1148      60965   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         6          0          2          0         37          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
        62          0          0          0          0         72   uidiv_div0.o

    ----------------------------------------------------------------------
       284         16          0          0          0        300   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       278         16          0          0          0        300   mc_p.l

    ----------------------------------------------------------------------
       284         16          0          0          0        300   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      6400        416        500        508       1148      61245   Grand Totals
      6400        416        500         64       1148      61245   ELF Image Totals (compressed)
      6400        416        500         64          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 6900 (   6.74kB)
    Total RW  Size (RW Data + ZI Data)              1656 (   1.62kB)
    Total ROM Size (Code + RO Data + RW Data)       6964 (   6.80kB)

==============================================================================

